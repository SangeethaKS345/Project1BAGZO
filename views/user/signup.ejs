<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="keywords" content="Male_Fashion, unica, creative, html">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Sign Up</title>
    
    <!-- Google Font -->
    <link href="https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@300;400;600;700;800;900&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Montserrat:400,800" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        body {
            background: #f6f5f7;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            font-family: 'Montserrat', sans-serif;
            height: 100vh;
        }

        h1 {
            font-weight: bold;
            margin: 0;
            margin-bottom: 15px;
            color: #DB4437;
        }

        h2 {
            text-align: center;
        }

        p {
            font-size: 14px;
            font-weight: 100;
            line-height: 20px;
            letter-spacing: 0.5px;
            margin: 20px 0 30px;
        }

        span {
            font-size: 14px;
            margin-bottom: 25px;
            color: #FF4B2B;
        }

        a {
            color: #333;
            font-size: 14px;
            text-decoration: none;
            margin: 15px 0;
            transition: 0.3s;
        }

        a:hover {
            color: #FF4B2B;
        }

        button {
            border-radius: 20px;
            border: 1px solid #FF4B2B;
            background: linear-gradient(to right, #FF4B2B, #FF416C);
            color: #FFFFFF;
            font-size: 14px;
            font-weight: bold;
            padding: 12px 45px;
            letter-spacing: 1px;
            text-transform: uppercase;
            transition: all 0.3s ease-in-out;
            cursor: pointer;
            margin-top: 10px;
        }

        button:hover {
            background: #DB4437;
            border-color: #DB4437;
        }

        button:active {
            transform: scale(0.95);
        }

        button:focus {
            outline: none;
        }

        button.ghost {
            background-color: transparent;
            border-color: #FFFFFF;
        }

        button.ghost:hover {
            background-color: #FFFFFF;
            color: #FF4B2B;
        }

        form {
            background-color: #FFFFFF;
            display: flex;
            align-items: center;
            justify-content: center;
            flex-direction: column;
            padding: 0 50px;
            height: 100%;
            text-align: center;
        }

        input {
            background-color: #eee;
            border: none;
            border-radius: 5px;
            padding: 12px 15px;
            margin: 8px 0;
            width: 100%;
        }

        input:focus {
            outline: 1px solid #DB4437;
        }

        .container {
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);
            position: relative;
            overflow: hidden;
            width: 100%;
            max-width: 900px;
            min-height: 700px;
        }

        .form-container {
            position: absolute;
            top: 0;
            height: 100%;
            transition: all 0.6s ease-in-out;
        }

        .sign-up-container {
            width: 50%;
            z-index: 1;
        }

        .input-container {
            width: 100%;
            margin-bottom: 5px;
        }

        .overlay-container {
            position: absolute;
            top: 0;
            left: 50%;
            width: 50%;
            height: 100%;
            overflow: hidden;
            z-index: 99;
        }

        .overlay {
            background: linear-gradient(to right, #FF4B2B, #FF416C);
            background-repeat: no-repeat;
            background-size: cover;
            background-position: 0 0;
            color: #FFFFFF;
            position: relative;
            left: -100%;
            height: 100%;
            width: 200%;
        }

        .overlay-panel {
            position: absolute;
            display: flex;
            align-items: center;
            justify-content: center;
            flex-direction: column;
            padding: 0 40px;
            text-align: center;
            top: 0;
            height: 100%;
            width: 50%;
        }

        .overlay-right {
            right: 0;
        }

        .gmail-btn {
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 10px 15px;
            background-color: #fff;
            color: #333;
            border: 1px solid #ddd;
            border-radius: 5px;
            margin-top: 15px;
            width: 100%;
            transition: background-color 0.3s;
        }

        .gmail-btn:hover {
            background-color: #f5f5f5;
            border-color: #DB4437;
        }

        .gmail-btn i {
            margin-right: 10px;
            color: #DB4437;
        }

        .back-home-btn {
            margin-top: 15px;
            color: #333;
        }

        .login-link {
            margin-top: 20px;
            width: 100%;
            text-align: center;
        }

        /* Error message styling */
        .error-message {
    color: #DB4437;
    font-size: 14px;
    margin-top: 2px; /* Reduce space between input and error */
    margin-bottom: 5px; /* Reduce space between errors */
    text-align: left;
    width: 100%;
    display: none; /* Initially hidden */
}


        .alert {
            padding: 10px;
            margin-bottom: 15px;
            border-radius: 5px;
            font-size: 14px;
            width: 100%;
        }

        .alert-danger {
            background-color: #ffebee;
            color: #c62828;
            border: 1px solid #ffcdd2;
        }
        
        .password-container {
        position: relative;
    }
    
    .password-toggle {
        position: absolute;
        right: 10px;
        top: 50%;
        transform: translateY(-50%);
        cursor: pointer;
        color: #666;
    }
        
        /* Responsive */
        @media (max-width: 768px) {
            .container {
                min-height: 800px;
            }
            
            .sign-up-container {
                width: 100%;
            }
            
            .overlay-container {
                display: none;
            }
        }
    </style>
</head>

<body>
    <div class="container" id="container">
        <div class="form-container sign-up-container">
            <form id="signUpForm" action="/signup" method="post" novalidate>
                <h1>Create Account</h1>
                <span>Register to start your journey with us</span>
                
                <div id="signup-message" class="alert alert-danger" style="display: none;"></div>
                
                <div class="input-container">
                    <input type="text" id="fullName" placeholder="Full Name" name="name" />
                    <div id="error1" class="error-message"></div>
                </div>
                <div class="input-container">
                    <input type="email" id="email" placeholder="Email" name="email"/>
                    <div id="error2" class="error-message"></div>
                </div>
                <div class="input-container">
                    <input type="text" id="phone" placeholder="Phone Number" name="phone" />
                    <div id="error3" class="error-message"></div>
                </div>
                <div class="input-container password-container">
                    <input type="password" id="password" placeholder="Password" name="password"/>
                    <i class="password-toggle fa fa-eye-slash" onclick="togglePasswordVisibility('password')"></i>
                    <div id="error4" class="error-message"></div>
                </div>
                <div class="input-container password-container">
                    <input type="password" id="cPassword" placeholder="Confirm Password" name="cPassword" />
                    <i class="password-toggle fa fa-eye-slash" onclick="togglePasswordVisibility('cPassword')"></i>
                    <div id="error5" class="error-message"></div>
                </div>
                <button type="button" id="submitBtn">Sign Up</button>
                <a href="/auth/google" class="gmail-btn"><i class="fab fa-google"></i> Sign up with Gmail</a>
                
                <div class="login-link">
                    Already have an account? <a href="/signin">Sign In</a>
                </div>
                
                <a href="/" class="back-home-btn">Back to Home</a>
            </form>
        </div>
        <div class="overlay-container">
            <div class="overlay">
                <div class="overlay-panel overlay-right">
                    <h1>Welcome!</h1>
                    <p>Enter your details and start your journey with us</p>
                    <p>Join our community and discover exclusive products, special offers, and personalized recommendations tailored just for you.</p>
                    <button class="ghost" onclick="window.location.href='/signin'">Sign In</button>
                </div>
            </div>
        </div>
    </div>
    
    
    <script>
    document.addEventListener("DOMContentLoaded", function() {
        // Get URL parameters
        const urlParams = new URLSearchParams(window.location.search);
        const message = urlParams.get("message");
        
        // Show error message if present
        if (message) {
            const decodedMessage = decodeURIComponent(message);
            const signupMessage = document.getElementById('signup-message');
            signupMessage.textContent = decodedMessage;
            signupMessage.style.display = "block";
        }
    });
    
    // Function to toggle password visibility
    function togglePasswordVisibility(inputId) {
        const passwordInput = document.getElementById(inputId);
        const icon = event.target;
        
        if (passwordInput.type === "password") {
            passwordInput.type = "text";
            icon.classList.remove("fa-eye-slash");
            icon.classList.add("fa-eye");
        } else {
            passwordInput.type = "password";
            icon.classList.remove("fa-eye");
            icon.classList.add("fa-eye-slash");
        }
    }
    
    // Sign Up form validation and submission
    document.getElementById('submitBtn').addEventListener('click', function() {
        // Clear previous error messages
        document.querySelectorAll('.error-message').forEach(function(el) {
            el.textContent = '';
            el.style.display = 'none';
        });
        document.getElementById('signup-message').style.display = 'none';
        
        // Perform validation
        let isValid = true;
        const fullName = document.getElementById('fullName').value.trim();
        const email = document.getElementById('email').value.trim();
        const phone = document.getElementById('phone').value.trim();
        const password = document.getElementById('password').value.trim();
        const cPassword = document.getElementById('cPassword').value.trim();
        
        // Name validation
        if (fullName === '') {
            showError('error1', 'Full Name is required.');
            isValid = false;
        } else if (!/^[A-Za-z\s]+$/.test(fullName)) {
            showError('error1', 'Name should contain only letters and spaces.');
            isValid = false;
        }
        
        // Email validation
        if (email === '') {
            showError('error2', 'Email is required.');
            isValid = false;
        } else if (!/\S+@\S+\.\S+/.test(email)) {
            showError('error2', 'Please enter a valid email.');
            isValid = false;
        }
        
        // Phone validation
        if (phone === '') {
            showError('error3', 'Phone Number is required.');
            isValid = false;
        } else if (!/^\d{10}$/.test(phone)) {
            showError('error3', 'Please enter a valid 10-digit phone number.');
            isValid = false;
        }
        
        // Password validation
        const passwordPattern = /^(?=.*[A-Z])(?=.*[a-z])(?=.*\d)(?=.*[!@#$%^&*])[A-Za-z\d!@#$%^&*]{8,}$/;
        if (password === '') {
            showError('error4', 'Password is required.');
            isValid = false;
        } else if (!passwordPattern.test(password)) {
            showError('error4', 'Password must be at least 8 characters with one uppercase letter, one lowercase letter, one number, and one special character.');
            isValid = false;
        }
        
        // Confirm password validation
        if (cPassword === '') {
            showError('error5', 'Confirm Password is required.');
            isValid = false;
        } else if (password !== cPassword) {
            showError('error5', 'Passwords do not match.');
            isValid = false;
        }
    
        if (isValid) {
            // Show confirmation dialog
            if (typeof Swal !== 'undefined') {
                Swal.fire({
                    title: 'Are you sure?',
                    text: "Do you want to proceed with the registration?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, submit it!',
                    cancelButtonText: 'No, cancel!',
                    confirmButtonColor: '#FF4B2B',
                    cancelButtonColor: '#333',
                    customClass: {
                        confirmButton: 'btn btn-primary',
                        cancelButton: 'btn btn-outline-danger ml-1'
                    }
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Submit the form if the user confirms
                        document.getElementById('signUpForm').submit();
                    }
                });
            } else {
                // Fallback if SweetAlert is not available
                if (confirm("Do you want to proceed with the registration?")) {
                    document.getElementById('signUpForm').submit();
                }
            }
        }
    });
    
    function showError(elementId, message) {
        const errorElement = document.getElementById(elementId);
        errorElement.textContent = message;
        errorElement.style.display = 'block';
    }
    </script>
</body>