

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />

  <!--=============== FLATICON ===============-->
  <link rel="stylesheet" href="https://cdn-uicons.flaticon.com/2.0.0/uicons-regular-straight/css/uicons-regular-straight.css" />
  
  <!--=============== FONT AWESOME ===============-->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />

  <!--=============== CSS ===============-->
  <link rel="stylesheet" href="/css/myOrders.css" />
<title>My Orders | BAGZO</title>

<%- include('../../views/partials/user/header') %>
</head>

<body>
  <!--=============== BREADCRUMB ===============-->
  <section class="breadcrumb">
    <ul class="breadcrumb__list flex container">
      <li><a href="/" class="breadcrumb__link">Home</a></li>
      <li><span class="breadcrumb__link">></span></li>
      <li><a href="/profile" class="breadcrumb__link">Profile</a></li>
      <li><span class="breadcrumb__link">></span></li>
      <li><a href="/my-orders" class="breadcrumb__link">My Orders</a></li>
    </ul>
  </section>
  
  <div class="orders-container">
    <h2 class="section__title">My Orders</h2>
    
    <% if (orders.length === 0) { %>
      <div class="empty-orders">
        <img src="/assets/img/empty-orders.svg" alt="No orders" class="empty-orders-img">
        <h3>No Orders Found</h3>
        <p>You haven't placed any orders yet</p>
        <a href="/shop" class="btn btn-primary">Start Shopping</a>
      </div>
    <% } else { %>
      <% orders.forEach(order => { %>
        <div class="order-card">
          <div class="order-header">
            <div>
              <h3><%= order.product.name %></h3>
              <p><i class="fas fa-hashtag"></i> Order #<%= order.orderId %></p>
              <p><i class="fas fa-calendar-alt"></i> Placed on: <%= order.placedOn %></p>
              <p><i class="fas fa-box"></i> Total Quantity: <%= order.quantity %></p>
              <p class="total-amount"><i class="fas fa-rupee-sign"></i> â‚¹<%= order.totalAmount %></p>
            </div>
            
            <div>
              <% if (order.status === 0) { %>
                <button class="btn btn-secondary cancel-order-btn" data-order-id="<%= order.orderId %>" disabled>
                  <i class="fas fa-ban"></i> Cancelled
                </button>
              <% } else if (order.cancellation_reason) { %>
                <button class="btn btn-secondary cancel-order-btn" data-order-id="<%= order.orderId %>" disabled>
                  <i class="fas fa-ban"></i> Cancelled
                </button>
              <% } else if (order.status === 4 && !order.return_reason) { %>
                <button class="btn btn-warning return-order-btn" data-order-id="<%= order.orderId %>">
                  <i class="fas fa-undo"></i> Return Order
                </button>
              <% } else if (order.status === 5) { %>
                <button class="btn btn-secondary return-order-btn" data-order-id="<%= order.orderId %>" disabled>
                  <i class="fas fa-clock"></i> Return request in process
                </button>
              <% } else if (order.status === 6) { %>
                <button class="btn btn-success return-order-btn" data-order-id="<%= order.orderId %>" disabled>
                  <i class="fas fa-check-circle"></i> Returned
                </button>
              <% } else if (order.status < 4) { %>
                <button class="btn btn-danger cancel-order-btn" data-order-id="<%= order.orderId %>">
                  <i class="fas fa-times-circle"></i> Cancel Order
                </button>
              <% } %>
            </div>
          </div>
          <div class="order-details">
            <img src="/uploads/re-image/<%= order.product.productImage[0] %>" alt="<%= order.product.name %>" class="product-image">
            <div class="product-info">
              <div class="status-tracker">
                <div class="status-line <%= order.status >= 2 ? 'active' : '' %>"></div>
                <div class="status-step <%= order.status >= 1 ? 'active' : '' %>">
                  <div class="status-dot <%= order.status >= 1 ? 'active' : '' %>"></div>
                  <span>Order Placed</span>
                </div>
                <div class="status-step <%= order.status >= 2 ? 'active' : '' %>">
                  <div class="status-dot <%= order.status >= 2 ? 'active' : '' %>"></div>
                  <span>Processing</span>
                </div>
                <div class="status-step <%= order.status >= 3 ? 'active' : '' %>">
                  <div class="status-dot <%= order.status >= 3 ? 'active' : '' %>"></div>
                  <span>Shipped</span>
                </div>
                <div class="status-step <%= order.status >= 4 ? 'active' : '' %>">
                  <div class="status-dot <%= order.status >= 4 ? 'active' : '' %>"></div>
                  <span>Delivered</span>
                </div>
              </div>
            </div>
          </div>

          <div class="action-buttons">
            <button class="btn btn-primary buy-again-btn" data-product-id="<%= order.product._id %>">
              <i class="fas fa-shopping-cart"></i> Buy Again
            </button>
            <button class="btn btn-primary download-invoice-btn" data-order-id="<%= order.orderId %>">
              <i class="fas fa-file-download"></i> Download Invoice
            </button>
          </div>
        </div>
      <% }) %>

      <!-- Pagination -->
      <div class="pagination">
        <% if (currentPage > 1) { %>
          <a href="/my-orders?page=<%= currentPage - 1 %>" class="pagination-btn">
            <i class="fas fa-chevron-left"></i> Previous
          </a>
        <% } %>
        
        <% for(let i = 1; i <= totalPages; i++) { %>
          <a href="/my-orders?page=<%= i %>" class="pagination-btn <%= currentPage === i ? 'active' : '' %>"><%= i %></a>
        <% } %>
        
        <% if (currentPage < totalPages) { %>
          <a href="/my-orders?page=<%= currentPage + 1 %>" class="pagination-btn">
            Next <i class="fas fa-chevron-right"></i>
          </a>
        <% } %>
      </div>
    <% } %>
  </div>

  <!-- Cancel Order Modal -->
  <div id="cancelOrderModal" class="modal" style="display: none; position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); z-index: 1000; width: 400px; max-width: 90%; background: white; padding: 20px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);">
    <h3>Cancel Order</h3>
    <p>Please provide a reason for cancellation</p>
    <textarea id="cancellationReason" placeholder="Enter your reason here..."></textarea>
    <div style="text-align: right;">
      <button id="closeModal">
        <i class="fas fa-times"></i> Close
      </button>
      <button id="confirmCancel">
        <i class="fas fa-check"></i> Confirm
      </button>
    </div>
  </div>

  <!-- Return Order Modal -->
  <div id="returnOrderModal" class="modal" style="display: none; position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); z-index: 1000; width: 400px; max-width: 90%; background: white; padding: 20px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);">
    <h3>Return Order</h3>
    <p>Please provide a reason for return</p>
    <textarea id="returnReason" placeholder="Enter your reason here..."></textarea>
    <div style="text-align: right;">
      <button id="closeReturnModal">
        <i class="fas fa-times"></i> Close
      </button>
      <button id="confirmReturn">
        <i class="fas fa-check"></i> Confirm
      </button>
    </div>
  </div>

  <!-- Overlay -->
  <div id="modalOverlay" style="display: none; position: fixed; top: 0; left: 0; right: 0; bottom: 0; background-color: rgba(0,0,0,0.5); z-index: 999;"></div>
</body>


<%- include('../../views/partials/user/footer') %>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
// Modal overlay
const modalOverlay = document.getElementById('modalOverlay');

// Cancel Order Handler
document.querySelectorAll('.cancel-order-btn').forEach(button => {
  button.addEventListener('click', async (e) => {
    const orderId = e.target.closest('.cancel-order-btn').getAttribute('data-order-id');
    
    // Show modal and overlay
    const modal = document.getElementById('cancelOrderModal');
    modal.style.display = 'block';
    modalOverlay.style.display = 'block';

    // Handle modal close
    const closeModal = () => {
      modal.style.display = 'none';
      modalOverlay.style.display = 'none';
    };

    document.getElementById('closeModal').addEventListener('click', closeModal);
    modalOverlay.addEventListener('click', closeModal);

    // Handle cancel confirmation
    document.getElementById('confirmCancel').addEventListener('click', async () => {
      const cancellationReason = document.getElementById('cancellationReason').value.trim();
      
      if (!cancellationReason) {
        Swal.fire('Error', 'Please provide a reason for cancellation.', 'error');
        return;
      }

      try {
        const response = await fetch(`/cancel-order/${orderId}`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ cancellationReason })
        });
        
        const data = await response.json();
        
        if (data.success) {
          Swal.fire({
            title: 'Order Cancelled',
            text: 'Your order has been successfully cancelled.',
            icon: 'success',
            confirmButtonColor: '#FF4B2B'
          });
          
          // Update the button
          const buttonToUpdate = document.querySelector(`.cancel-order-btn[data-order-id="${orderId}"]`);
          if (buttonToUpdate) {
            buttonToUpdate.innerHTML = '<i class="fas fa-ban"></i> Cancelled';
            buttonToUpdate.disabled = true;
            buttonToUpdate.classList.remove('btn-danger');
            buttonToUpdate.classList.add('btn-secondary');
          }
          
          closeModal();
        } else {
          Swal.fire('Error', data.message || 'Failed to cancel order', 'error');
        }
      } catch (error) {
        console.error('Error:', error);
        Swal.fire('Error', 'Something went wrong', 'error');
      }
    });
  });
});

// Return Order Handling
document.querySelectorAll('.return-order-btn').forEach(button => {
  button.addEventListener('click', async (e) => {
    const orderId = e.target.closest('.return-order-btn').getAttribute('data-order-id');
    
    // Show modal and overlay
    const modal = document.getElementById('returnOrderModal');
    modal.style.display = 'block';
    modalOverlay.style.display = 'block';

    // Handle modal close
    const closeModal = () => {
      modal.style.display = 'none';
      modalOverlay.style.display = 'none';
    };

    document.getElementById('closeReturnModal').addEventListener('click', closeModal);
    modalOverlay.addEventListener('click', closeModal);

    // Handle return confirmation
    document.getElementById('confirmReturn').addEventListener('click', async () => {
      const returnReason = document.getElementById('returnReason').value.trim();
      
      if (!returnReason) {
        Swal.fire('Error', 'Please provide a reason for return.', 'error');
        return;
      }

      try {
        const response = await fetch(`/return-order/${orderId}`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ returnReason })
        });
        
        const data = await response.json();
        
        if (data.success) {
          Swal.fire({
            title: 'Return Requested',
            text: 'Your return request has been successfully submitted.',
            icon: 'success',
            confirmButtonColor: '#FF4B2B'
          });
          
          // Update the button
          button.innerHTML = '<i class="fas fa-clock"></i> Return Request In Process';
          button.disabled = true;
          button.classList.replace('btn-warning', 'btn-secondary');
          
          closeModal();
        } else {
          Swal.fire('Error', data.message || 'Failed to process return request', 'error');
        }
      } catch (error) {
        console.error('Return Order Error:', error);
        Swal.fire('Error', 'Something went wrong: ' + error.message, 'error');
      }
    });
  });
});

// Buy Again Handler
document.querySelectorAll('.buy-again-btn').forEach(button => {
  button.addEventListener('click', (e) => {
    const productId = e.target.closest('.buy-again-btn').getAttribute('data-product-id');
    if (productId) {
      window.location.href = `/productDetails?id=${productId}`;
    } else {
      Swal.fire({
        title: 'Error',
        text: 'Product ID not found',
        icon: 'error',
        confirmButtonColor: '#FF4B2B'
      });
    }
  });
});

document.querySelectorAll('.download-invoice-btn').forEach(button => {
  button.addEventListener('click', async (e) => {
    const orderId = e.target.closest('.download-invoice-btn').getAttribute('data-order-id');
    
    try {
      const response = await fetch(`/download-invoice/${orderId}`, {
        method: 'GET',
        headers: {
          'Accept': 'application/pdf'
        }
      });

      if (!response.ok) {
        throw new Error('Failed to download invoice');
      }

      // Create blob and trigger download
      const blob = await response.blob();
      const url = window.URL.createObjectURL(blob);
      const link = document.createElement('a');
      link.href = url;
      link.download = `invoice_${orderId}.pdf`;
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
      window.URL.revokeObjectURL(url);

    } catch (error) {
      console.error('Error downloading invoice:', error);
      Swal.fire({
        title: 'Error',
        text: 'Failed to download invoice. Please try again.',
        icon: 'error',
        confirmButtonColor: '#FF4B2B'
      });
    }
  });
});
</script>