<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Product Details</title>

  <!-- jQuery -->
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

  <!-- Fancybox for gallery view -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/fancybox/3.5.7/jquery.fancybox.min.css">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/fancybox/3.5.7/jquery.fancybox.min.js"></script>

  <style>
    /* General Styles */
    body {
      background-color: #f4f4f4;
      color: #333;
      font-family: 'Arial', sans-serif;
      margin: 0;
      padding: 0;
    }

    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 20px;
    }

    /* Breadcrumbs */
    .breadcrumbs {
      color: #333;
      font-size: 14px;
      margin-bottom: 20px;
      padding: 10px 0;
    }

    .breadcrumbs a {
      color: #DB4437;
      text-decoration: none;
    }

    .breadcrumbs a:hover {
      text-decoration: underline;
    }

    /* Product Details */
    .product-details {
      display: flex;
      flex-wrap: wrap;
      gap: 30px;
      background: #fff;
      padding: 30px;
      border-radius: 10px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      margin-bottom: 30px;
    }

    /* Amazon-style Zoom Functionality */
    .product-image-container {
      flex: 1;
      min-width: 300px;
      position: relative;
    }

    .main-image-wrapper {
      position: relative;
      cursor: crosshair;
      width: 100%;
      max-width: 450px;
    }

    .main-image {
      width: 100%;
      height: auto;
      border-radius: 8px;
      display: block;
    }

    .zoom-lens {
      position: absolute;
      border: 1px solid #ccc;
      background-color: rgba(255, 255, 255, 0.4);
      width: 175px;
      height: 175px;
      display: none;
      cursor: crosshair;
      pointer-events: none;
    }

    .zoom-result {
      position: absolute;
      top: 0;
      left: 105%;
      /* Position it to the right of the main image */
      width: 450px;
      height: 450px;
      border: 1px solid #e0e0e0;
      background-repeat: no-repeat;
      background-color: #fff;
      border-radius: 8px;
      display: none;
      z-index: 100;
      box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    }

    .image-thumbnails {
      display: flex;
      gap: 10px;
      flex-wrap: wrap;
      margin-top: 15px;
      max-width: 450px;
    }

    .image-thumbnails a {
      border: 2px solid transparent;
      border-radius: 5px;
      overflow: hidden;
      transition: all 0.2s ease;
    }

    .image-thumbnails a:hover,
    .image-thumbnails a.active {
      border-color: #DB4437;
    }

    .image-thumbnails img {
      width: 75px;
      height: 75px;
      object-fit: cover;
    }

    .product-info {
      flex: 2;
      min-width: 300px;
    }

    .product-info h1 {
      color: #DB4437;
      font-size: 28px;
      margin-top: 0;
      margin-bottom: 15px;
    }

    .product-info p {
      color: #555;
      line-height: 1.6;
      margin-bottom: 12px;
    }

    /* Price & Discount */
    .price-container {
      margin: 20px 0;
      background: #f9f9f9;
      padding: 15px;
      border-radius: 8px;
    }

    .regular-price {
      color: #777;
      font-size: 16px;
      text-decoration: line-through;
      margin-bottom: 5px;
    }

    .price {
      font-size: 24px;
      font-weight: bold;
      color: #FF4B2B;
      margin: 5px 0;
    }

    .discount {
      font-size: 16px;
      font-weight: normal;
      color: #FF4B2B;
      margin-left: 10px;
      background: rgba(255, 75, 43, 0.1);
      padding: 3px 8px;
      border-radius: 4px;
    }

    /* Stock & Rating */
    .stock {
      font-size: 16px;
      font-weight: bold;
      margin: 15px 0;
    }

    .in-stock {
      color: #28a745;
    }

    .out-of-stock {
      color: #dc3545;
    }

    .rating {
      color: #FFCC00;
      font-size: 18px;
      margin: 15px 0;
    }

    #wishlistBtn {
      position: relative;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 8px;
      padding: 12px 25px;
    }

    #wishlistBtn i {
      font-size: 16px;
    }

    #wishlistBtn.active {
      background: #DB4437;
    }

    @keyframes wishlistPulse {
      0% { transform: scale(1); }
      50% { transform: scale(1.2); }
      100% { transform: scale(1); }
    }

    #wishlistBtn.animate i {
      animation: wishlistPulse 0.5s ease;
    }
    /* Add to Cart Button */
#addToCartBtn {
  padding: 12px 25px;
  background: #FF4B2B; /* Matches the accent color used elsewhere */
  color: #fff;
  border: none;
  border-radius: 4px;
  font-size: 16px;
  font-weight: bold;
  cursor: pointer;
  transition: background 0.3s ease;
}

#addToCartBtn:hover:not(:disabled) {
  background: #DB4437; /* Slightly darker shade on hover */
}

#addToCartBtn:disabled {
  background: #ccc; /* Grayed out when disabled */
  color: #666;
  cursor: not-allowed;
  opacity: 0.7;
}
    /* Quantity Selector */
    .quantity-selector {
      display: flex;
      align-items: center;
      margin: 20px 0;
    }

    .quantity-selector label {
      margin-right: 15px;
      font-weight: bold;
    }

    .quantity-controls {
      display: flex;
      align-items: center;
      border: 1px solid #DB4437;
      border-radius: 4px;
      overflow: hidden;
    }

    .quantity-btn {
      width: 35px;
      height: 35px;
      background: #FF4B2B;
      color: #fff;
      border: none;
      cursor: pointer;
      font-size: 18px;
      font-weight: bold;
      transition: 0.3s;
    }

    .quantity-btn:hover {
      background: #DB4437;
    }

    #quantity {
      width: 60px;
      height: 35px;
      text-align: center;
      border: none;
      border-left: 1px solid #DB4437;
      border-right: 1px solid #DB4437;
      font-size: 16px;
    }

    /* Removing Number Input Arrows */
    #quantity::-webkit-inner-spin-button,
    #quantity::-webkit-outer-spin-button {
      -webkit-appearance: none;
      margin: 0;
    }

    /* Related Products */
    .related-products-container {
      margin-top: 40px;
    }

    .related-products-container h3 {
      color: #DB4437;
      font-size: 22px;
      margin-bottom: 20px;
    }

    .related-products-list {
      display: flex;
      gap: 20px;
      flex-wrap: wrap;
    }

    .related-product {
      background: #fff;
      padding: 15px;
      border-radius: 8px;
      text-align: center;
      width: calc(33.333% - 20px);
      min-width: 200px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      transition: transform 0.3s;
    }

    .related-product:hover {
      transform: translateY(-5px);
    }

    .related-product a {
      text-decoration: none;
      color: inherit;
    }

    .related-product img {
      width: 100%;
      height: 180px;
      object-fit: cover;
      border-radius: 5px;
      margin-bottom: 10px;
    }

    .related-product h4 {
      font-size: 16px;
      color: #DB4437;
      margin: 10px 0;
    }

    .related-product p {
      font-size: 16px;
      color: #FF4B2B;
      font-weight: bold;
      margin: 5px 0;
    }

    /* Responsive Styles */
    @media (max-width: 992px) {
      .zoom-result {
        display: none !important;
        /* Hide on smaller screens */
      }

      .main-image-wrapper {
        cursor: default;
      }
    }

    @media (max-width: 768px) {
      .product-details {
        flex-direction: column;
      }

      .related-product {
        width: 100%;
      }
    }
  </style>
</head>

<body>
  <%- include('../../views/partials/user/header') %>
  <div class="container">
    <div class="breadcrumbs">
      <a href="/">Home</a> > 
      <a href="/shop">Shop</a> > 
      <% if (product.category) { %>
        <a href="/shop?category=<%= product.category._id %>"><%= product.category.name %></a> >
      <% } %>
      <span><%= product.productName %></span>
    </div>

    <div class="product-details">
      <div class="product-image-container">
        <!-- Main Image with Amazon-style Zoom -->
        <div class="main-image-wrapper">
          <img id="mainImage" class="main-image"
              src="/uploads/re-image/<%= product.productImage[0] %>" 
              alt="<%= product.productName %>" />
          <div class="zoom-lens" id="zoomLens"></div>
          <div class="zoom-result" id="zoomResult"></div>
        </div>

        <!-- Image Thumbnails -->
        <div class="image-thumbnails">
          <% product.productImage.forEach((image, index) => { %>
            <a href="/uploads/re-image/<%= image %>" 
               data-fancybox="gallery" 
               class="thumbnail-link <%= index === 0 ? 'active' : '' %>"
               data-image="/uploads/re-image/<%= image %>">
              <img src="/uploads/re-image/<%= image %>" alt="<%= product.productName %> thumbnail">
            </a>
          <% }) %>
        </div>
      </div>

      <div class="product-info">
        <h1><%= product.productName %></h1>
        <p><%= product.description %></p>
        
        <p><strong>Brand:</strong> <%= product.brand ? product.brand.brandName : 'Not specified' %></p>
        <p><strong>Category:</strong> <%= product.category.name %></p>
        <p><strong>Color:</strong> <%= product.color || 'Not specified' %></p>
        
        <div class="price-container">
          <% if (product.regularPrice > product.salesPrice) { %>
            <p class="regular-price">Regular Price: ₹<%= product.regularPrice.toFixed(2) %></p>
            <p class="price">Sale Price: ₹<%= product.salesPrice.toFixed(2) %>  
              <span class="discount">(<%= ((product.regularPrice - product.salesPrice) / product.regularPrice * 100).toFixed(1) %>% OFF)</span>
            </p>
          <% } else { %>
            <p class="price">Price: ₹<%= product.salesPrice.toFixed(2) %></p>
          <% } %>
        </div>
    
        <p class="stock <%= product.quantity > 0 ? 'in-stock' : 'out-of-stock' %>">
          <% if (product.quantity > 0) { %>
            ✓ In Stock (<%= product.quantity %> available)
          <% } else { %>
            ✗ Out of Stock
          <% } %>
        </p>
        
        <p class="rating">⭐⭐⭐⭐☆ (4.5 / 5)</p>
    
        <div class="quantity-selector">
          <label for="quantity">Quantity:</label>
          <div class="quantity-controls">
            <button type="button" class="quantity-btn minus">-</button>
            <input type="number" id="quantity" name="quantity" value="1" min="1" max="<%= product.quantity %>">
            <button type="button" class="quantity-btn plus">+</button>
          </div>
        </div>
    
        <div style="display: flex; gap: 10px;">
          <form id="addToCartForm" action="/add-to-cart" method="POST" style="margin: 0;">
            <input type="hidden" name="productId" value="<%= product._id %>">
            <input type="hidden" name="quantity" id="formQuantity">
            <button type="submit" class="btn" id="addToCartBtn" <%= product.quantity <= 0 ? 'disabled' : '' %>>
              Add to Cart
            </button>
          </form>
          <button class="btn" id="wishlistBtn" data-product-id="<%= product._id %>">
            <i class="fas fa-heart"></i> Add to Wishlist
          </button>
        </div>
      </div>
    </div>

    <div class="related-products-container">
      <h3>You May Also Like</h3>
      <div class="related-products-list">
        <% relatedProducts.forEach((related) => { %>
          <div class="related-product">
            <a href="/productDetails?id=<%= related._id %>">
              <img src="/uploads/re-image/<%= related.productImage[0] %>" 
                  alt="<%= related.productName %>">
              <h4><%= related.productName %></h4>
              <p>₹<%= related.salesPrice.toFixed(2) %></p>
            </a>
          </div>
        <% }); %>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
    document.addEventListener("DOMContentLoaded", () => {
      // Check initial wishlist status
      const wishlistBtn = document.getElementById("wishlistBtn");
      const productId = wishlistBtn.getAttribute("data-product-id");

      fetch(`/wishlist/check-status?productId=${productId}`, {
        credentials: 'include'
      })
      .then(response => response.json())
      .then(data => {
        if (data.success && data.inWishlist) {
          wishlistBtn.classList.add('active');
          wishlistBtn.innerHTML = '<i class="fas fa-heart"></i> Remove from Wishlist';
        }
      })
      .catch(error => console.error('Error checking wishlist status:', error));

      // [Previous zoom and thumbnail code remains unchanged until quantity controls]

      document.querySelector(".quantity-btn.plus").addEventListener("click", () => {
        const quantityInput = document.getElementById("quantity");
        const max = parseInt(quantityInput.getAttribute("max"));
        let current = parseInt(quantityInput.value);
        
        if (current < 5) {
          quantityInput.value = current + 1;
        } else {
          Swal.fire({
            icon: 'warning',
            title: 'Limit Reached',
            text: 'Only 5 products can be added to the cart at once.',
          });
        }
      });
  
      document.querySelector(".quantity-btn.minus").addEventListener("click", () => {
        const quantityInput = document.getElementById("quantity");
        let current = parseInt(quantityInput.value);
        if (current > 1) quantityInput.value = current - 1;
      });
  
      document.getElementById("addToCartForm").addEventListener("submit", async (e) => {
        e.preventDefault();
  
        const quantity = parseInt(document.getElementById("quantity").value);
        if (isNaN(quantity) || quantity <= 0) {
          Swal.fire({
            icon: 'error',
            title: 'Invalid Quantity',
            text: 'Please enter a valid quantity.',
          });
          return;
        }
  
        if (quantity > 5) {
          Swal.fire({
            icon: 'error',
            title: 'Quantity Limit Exceeded',
            text: 'Only 5 products can be added to the cart at once.',
          });
          return;
        }
  
        const userData = "<%= typeof userData !== 'undefined' && userData ? 'true' : 'false' %>";
        if (userData === "false") {
          Swal.fire({
            icon: 'warning',
            title: 'Login Required',
            text: 'Please log in to add items to your cart.',
          }).then(() => {
            window.location.href = "/login";
          });
          return;
        }
  
        try {
          const response = await fetch("/add-to-cart", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            credentials: "include",
            body: JSON.stringify({ 
              productId: "<%= product._id %>", 
              quantity: quantity 
            })
          });
          
          const result = await response.json();
          
          Swal.fire({
            icon: 'success',
            title: 'Success',
            text: result.message || "Product added to cart successfully!",
            timer: 1500,
            showConfirmButton: false
          });
          
        } catch (error) {
          console.error("Error adding to cart:", error);
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Error adding product to cart.',
          });
        }
      });

      document.getElementById("wishlistBtn").addEventListener("click", async () => {
        try {
          const isActive = wishlistBtn.classList.contains('active');
          const response = await fetch(`/wishlist/toggle/${productId}`, {
            method: 'POST',
            headers: { "Content-Type": "application/json" },
            credentials: 'include',
            body: JSON.stringify({ productId: "<%= product._id %>" })
          });

          const data = await response.json();

          if (response.ok) {
            if (isActive) {
              wishlistBtn.classList.remove('active');
              wishlistBtn.classList.add('animate');
              wishlistBtn.innerHTML = '<i class="fas fa-heart"></i> Add to Wishlist';
              Swal.fire({
                icon: 'success',
                title: 'Removed',
                text: data.message || 'Product removed from wishlist!',
                timer: 1500,
                showConfirmButton: false
              });
              setTimeout(() => wishlistBtn.classList.remove('animate'), 500);
            } else {
              wishlistBtn.classList.add('active');
              wishlistBtn.classList.add('animate');
              wishlistBtn.innerHTML = '<i class="fas fa-heart"></i> Remove from Wishlist';
              Swal.fire({
                icon: 'success',
                title: 'Added',
                text: data.message || 'Product added to wishlist!',
                timer: 1500,
                showConfirmButton: false
              });
              setTimeout(() => wishlistBtn.classList.remove('animate'), 500);
            }
          } else if (response.status === 401) {
            Swal.fire({
              icon: 'warning',
              title: 'Login Required',
              text: 'Please log in to manage your wishlist.',
            }).then(() => {
              window.location.href = '/login';
            });
          } else {
            throw new Error(data.error || 'Unknown error');
          }
        } catch (error) {
          console.error('Wishlist toggle error:', error);
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Failed to update wishlist: ' + error.message,
          });
        }
      });
    });
  </script>
  <%- include('../../views/partials/user/footer') %>
</body>
</html>