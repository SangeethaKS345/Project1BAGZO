<!-- Previous styles remain the same, add these additional styles -->
<!-- Add these updated styles -->
<style>
  /* Base Container */
.main-container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 20px;
  background-color: #fafafa;
}

/* Top Bar Styling */
.shop-topbar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 30px;
  background-color: #fff;
  padding: 20px;
  border-radius: 12px;
  box-shadow: 0 2px 15px rgba(0,0,0,0.05);
}

/* Search Form */
.search-form {
  display: flex;
  align-items: center;
  background-color: #fff;
  border: 1px solid #e0e0e0;
  border-radius: 8px;
  overflow: hidden;
  transition: all 0.3s ease;
  flex: 0 1 350px;
}

.search-form:focus-within {
  border-color: #FF4B2B;
  box-shadow: 0 0 0 2px rgba(255, 75, 43, 0.1);
}

.search-input {
  flex: 1;
  padding: 12px 16px;
  font-size: 14px;
  border: none;
  outline: none;
  color: #333;
}

.search-button {
  padding: 12px 20px;
  background: #FF4B2B;
  color: white;
  border: none;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

.search-button:hover {
  background: #FF416C;
}

/* Sort Dropdown */
.sort-dropdown {
  padding: 12px 20px;
  border: 1px solid #e0e0e0;
  border-radius: 8px;
  background-color: white;
  color: #333;
  cursor: pointer;
  transition: all 0.3s ease;
  min-width: 180px;
  appearance: none;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='%23333' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: right 8px center;
  background-size: 16px;
}

.sort-dropdown:hover {
  border-color: #FF4B2B;
}

/* Product List Container */
.product-list-container {
  display: flex;
  gap: 30px;
  width: 100%;
  min-height: 800px;
}

/* Sidebar */
.sidebar {
  flex: 0 0 250px;
  padding: 24px;
  background-color: #ffffff;
  border-radius: 12px;
  box-shadow: 0 2px 15px rgba(0,0,0,0.05);
  height: fit-content;
}

/* Clear Filter Button */
.clear-filter-btn {
  display: block;
  width: 90%;
  padding: 12px;
  background: #FF4B2B;
  color: white;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  transition: all 0.3s ease;
  margin-bottom: 20px;
  font-weight: 500;
  text-align: center;
  text-decoration: none;
}

.clear-filter-btn:hover {
  background: #FF416C;
}

/* Product Grid */
.product-grid {
  flex: 1;
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
  gap: 25px;
  align-items: start;
  min-height: 800px;
  align-content: flex-start;
  background: #fff;
  border-radius: 12px;
  padding: 20px;
}

/* Product Cards */
.product-card {
  height: 400px;
  background: #fff;
  border-radius: 12px;
  box-shadow: 0 2px 15px rgba(0,0,0,0.05);
  transition: all 0.3s ease;
  overflow: hidden;
  display: flex;
  flex-direction: column;
}

.product-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 5px 20px rgba(0,0,0,0.1);
}

.product-card img {
  width: 100%;
  height: 220px;
  object-fit: cover;
  transition: transform 0.3s ease;
}

.product-card:hover img {
  transform: scale(1.05);
}

/* Product Information */
.product-info {
  padding: 15px;
  display: flex;
  flex-direction: column;
  gap: 10px;
  flex: 1;
}

.product-name {
  color: #333;
  font-weight: 600;
  font-size: 1rem;
  line-height: 1.4;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

.product-price {
  display: flex;
  align-items: center;
  gap: 12px;
  margin: 10px 0;
}

.original-price {
  text-decoration: line-through;
  color: #888;
  font-size: 0.9em;
}

.sale-price {
  color: #FF4B2B;
  font-weight: 600;
  font-size: 1.1em;
}

/* Filter Sections */
.filter-section {
  margin-bottom: 30px;
}

.filter-title {
  color: #333;
  font-size: 20px;
  font-weight: 600;
  margin-bottom: 16px;
  padding-bottom: 8px;
  border-bottom: 2px solid #f0f0f0;
}

.filter-items {
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.filter-item a {
  color: #666;
  text-decoration: none;
  transition: all 0.3s ease;
  font-size: 18px;
  padding: 6px 0;
  display: block;
}

.filter-item a:hover {
  color: #FF4B2B;
  padding-left: 5px;
}

/* Price Filters */
.price-filters {
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.price-button {
  width: 100%;
  padding: 10px;
  background: transparent;
  border: 1px solid #e0e0e0;
  color: #666;
  border-radius: 6px;
  cursor: pointer;
  transition: all 0.3s ease;
  font-size: 14px;
  text-align: center;
}

.price-button:hover {
  background: #FF4B2B;
  color: white;
  border-color: #FF4B2B;
}

/* Add to Cart Button */
.add-to-cart-btn {
  margin-top: auto;
  width: 100%;
  padding: 12px;
  background: linear-gradient(45deg, #FF416C, #FF4B2B);
  color: white;
  border: none;
  border-radius: 6px;
  cursor: pointer;
  transition: all 0.3s ease;
  font-weight: 500;
  opacity: 0.95;
}

.add-to-cart-btn:hover {
  opacity: 1;
  transform: translateY(-2px);
}

/* No Products Message */
.no-products {
  grid-column: 1 / -1;
  text-align: center;
  padding: 40px;
  background: #fff;
  border-radius: 12px;
  box-shadow: 0 2px 15px rgba(0,0,0,0.05);
}

.no-products h3 {
  color: #666;
  font-size: 1.2em;
}

/* Responsive Design */
@media (max-width: 768px) {
  .shop-topbar {
    flex-direction: column;
    gap: 20px;
    align-items: stretch;
  }

  .search-form {
    flex: none;
    width: 100%;
  }

  .sort-dropdown {
    width: 100%;
  }

  .product-list-container {
    flex-direction: column;
    min-height: 600px;
  }

  .sidebar {
    width: 100%;
    margin-bottom: 20px;
  }

  .product-grid {
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    min-height: 600px;
  }
}

@media (max-width: 480px) {
  .product-grid {
    grid-template-columns: 1fr;
  }
  
  .product-card img {
    height: 180px;
  }
}
</style>
  
<%- include('../../views/partials/user/header') %>

  
  <div class="main-container">
    <section class="shop-page">
      <div class="shop-topbar">
        <form action="" method="GET" class="search-form" id="searchForm">
          <input type="text" name="search" value="<%= query.search %>" placeholder="Search products..." class="search-input">
          <button type="submit" class="search-button">Search</button>
        </form>
  
        <form action="" method="GET" id="sortForm">
          <!-- Preserve other query parameters -->
          <% if(query.category) { %>
            <input type="hidden" name="category" value="<%= query.category %>">
          <% } %>
          <% if(query.brand) { %>
            <input type="hidden" name="brand" value="<%= query.brand %>">
          <% } %>
          <% if(query.search) { %>
            <input type="hidden" name="search" value="<%= query.search %>">
          <% } %>
          
          <select name="sort" class="sort-dropdown" onchange="document.getElementById('sortForm').submit()">
            <option value="" <%= !query.sort ? 'selected' : '' %>>Sort By</option>
            <option value="price-asc" <%= query.sort === 'price-asc' ? 'selected' : '' %>>Price: Low to High</option>
            <option value="price-desc" <%= query.sort === 'price-desc' ? 'selected' : '' %>>Price: High to Low</option>
            <option value="name-asc" <%= query.sort === 'name-asc' ? 'selected' : '' %>>Name: A to Z</option>
            <option value="name-desc" <%= query.sort === 'name-desc' ? 'selected' : '' %>>Name: Z to A</option>
          </select>
        </form>
      </div>
  
      <div class="product-list-container">
        <aside class="sidebar">
            <a href="/shop" class="clear-filter-btn">
              Clear All Filters
            </a>
          <!-- Categories -->
          <div class="filter-section">
            <h3 class="filter-title">Categories</h3>
            <div class="filter-items">
              <% categories.forEach(category => { %>
                <div class="filter-item">
                  <a href="?category=<%= category._id %>&sort=<%= query.sort %>&search=<%= query.search %>">
                    <%= category.name %>
                  </a>
                </div>
              <% }) %>
            </div>
          </div>
  
          <!-- Brands -->
          <div class="filter-section">
            <h3 class="filter-title">Brands</h3>
            <div class="filter-items">
              <% brands.forEach(brand => { %>
                <div class="filter-item">
                  <a href="?brand=<%= brand._id %>&sort=<%= query.sort %>&search=<%= query.search %>">
                    <%= brand.brandName %>
                  </a>
                </div>
              <% }) %>
            </div>
          </div>
  
          <!-- Price Range -->
          <div class="filter-section">
            <h3 class="filter-title">Price Range</h3>
            <div class="price-filters">
              <button type="button" class="price-button" onclick="filterPrice(0, 500)">Under ₹500</button>
              <button type="button" class="price-button" onclick="filterPrice(500, 1000)">₹500 - ₹1000</button>
              <button type="button" class="price-button" onclick="filterPrice(1000, 1500)">₹1000 - ₹1500</button>
              <button type="button" class="price-button" onclick="filterPrice(1500, null)">Above ₹1500</button>
            </div>
          </div>
        </aside>
  
        <main class="product-grid">
          <% if (products.length === 0) { %>
            <div class="no-products">
              <h3>No products found</h3>
            </div>
          <% } else { %>
            <% products.forEach(product => { %>
              <div class="product-card">
                <a href="/productDetails?id=<%= product._id %>">
                  <img src="/uploads/re-image/<%= product.productImage[0] %>" alt="<%= product.productName %>">
                  <div class="product-info">
                    <h4 class="product-name"><%= product.productName %></h4>
                    <p class="product-price">
                      <span class="original-price">₹<%= product.regularPrice %></span>
                      <span class="sale-price">₹<%= product.salesPrice %></span>
                    </p>
                  </div>
                </a>
                <button class="add-to-cart-btn" onclick="addToCart('<%= product._id %>')">
                  Add to Cart
                </button>
              </div>
            <% }) %>
          <% } %>
        </main>
      </div>
    </section>
  </div>
  
  <script>
    function filterPrice(min, max) {
      const currentUrl = new URL(window.location.href);
      currentUrl.searchParams.set('minPrice', min);
      if (max) {
        currentUrl.searchParams.set('maxPrice', max);
      } else {
        currentUrl.searchParams.delete('maxPrice');
      }
      
      if (currentUrl.searchParams.get('sort')) {
        currentUrl.searchParams.set('sort', currentUrl.searchParams.get('sort'));
      }
      if (currentUrl.searchParams.get('search')) {
        currentUrl.searchParams.set('search', currentUrl.searchParams.get('search'));
      }
      
      window.location.href = currentUrl.toString();
    }
  
    async function addToCart(productId) {
      console.log('Attempting to add product to cart:', productId); // Debug log
      try {
        const response = await fetch('/add-to-cart', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ productId }),
          credentials: 'include' // Ensure session cookies are sent
        });
  
        console.log('Response status:', response.status); // Debug log
        console.log('Response redirected:', response.redirected); // Debug log
  
        if (response.ok) {
          const data = await response.json();
          alert(data.message || 'Product added to cart successfully!');
        } else if (response.status === 401 || response.redirected) {
          alert('Please log in to add items to your cart.');
          window.location.href = '/login';
        } else {
          const errorData = await response.json();
          console.error('Error data from server:', errorData); // Debug log
          alert('Failed to add product: ' + (errorData.message || 'Unknown error'));
        }
      } catch (error) {
        console.error('Fetch error:', error); // Detailed error log
        alert('Error adding product to cart: ' + error.message);
      }
    }
  </script>
<%- include('../../views/partials/user/footer') %>