<link rel="stylesheet" href="/css/costomer.css" type="text/css">
<%- include("../../views/partials/admin/header") %>
<body>
    <style>
        :root {
            --primary-red: #DB4437;
            --secondary-red: #FF4B2B;
            --gradient-end: #FF416C;
            --light-red: rgba(219, 68, 55, 0.1);
            --border-color: #e0e0e0;
            --text-dark: #333333;
            --text-muted: #777777;
            --bg-light: #f8f9fa;
            --badge-success-bg: rgba(40, 167, 69, 0.1);
            --badge-success-color: #28a745;
            --badge-danger-bg: rgba(220, 53, 69, 0.1);
            --badge-danger-color: #dc3545;
        }

        body {
            background-color: #fafafa;
            font-family: 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
        }

        /* Header Styling */
        .content-header {
            padding: 25px 0 15px;
        }

        .content-title {
            color: var(--primary-red);
            font-size: 28px;
            font-weight: 600;
            margin: 0;
            letter-spacing: -0.5px;
        }

        /* Search Container */
        .card-header {
            background-color: white;
            border-radius: 10px;
            box-shadow: 0 2px 15px rgba(0, 0, 0, 0.05);
            padding: 25px;
            margin-bottom: 25px !important;
        }

        .search-container {
            width: 100%;
            max-width: 700px;
            position: relative;
        }

        .input-group {
            position: relative;
            display: flex;
            align-items: center;
            box-shadow: 0 3px 10px rgba(0, 0, 0, 0.05);
        }

        .form-control {
            height: 50px;
            font-size: 15px;
            color: var(--text-dark);
            padding-left: 20px;
            transition: all 0.2s;
        }

        .form-control:focus {
            box-shadow: none;
            border-color: var(--primary-red);
        }

        .form-control::placeholder {
            color: var(--text-muted);
        }

        .form-select {
            height: 50px;
            min-width: 140px;
            color: var(--text-dark);
            font-weight: 500;
            background-color: white;
            transition: all 0.2s;
            font-size: 15px;
        }
        
        .form-select:focus {
            box-shadow: none;
            border-color: var(--primary-red);
        }

        .btn {
            height: 50px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 500;
            transition: all 0.3s;
            padding: 0 20px;
        }

        .btn-secondary {
            background-color: #f0f0f0;
            color: var(--text-dark);
        }

        .btn-secondary:hover {
            background-color: #e0e0e0;
            color: var(--primary-red);
        }

        /* Table Container */
        .right {
            background-color: white;
            border-radius: 10px;
            box-shadow: 0 2px 15px rgba(0, 0, 0, 0.05);
            padding: 0;
            overflow: hidden;
            margin-top: 20px !important;
        }

        .table {
            margin-bottom: 0;
        }

        .table thead {
            background-color: var(--bg-light);
        }

        .table thead th {
            padding: 18px 20px;
            color: var(--text-dark);
            font-weight: 600;
            font-size: 15px;
            border-bottom: 2px solid var(--border-color);
            vertical-align: middle;
        }

        .table tbody td {
            padding: 16px 20px;
            vertical-align: middle;
            border-bottom: 1px solid var(--border-color);
            color: var(--text-dark);
            font-size: 15px;
        }

        .table-striped tbody tr:nth-of-type(odd) {
            background-color: rgba(0, 0, 0, 0.02);
        }

        /* Action Buttons */
        .btn-action {
            border: none;
            font-weight: 500;
            padding: 8px 0;
            width: 100px;
            border-radius: 6px;
            font-size: 14px;
            transition: all 0.3s;
        }

        .btn-danger {
            background: linear-gradient(to right, var(--secondary-red), var(--gradient-end));
            border: none;
            color: white;
        }

        .btn-danger:hover {
            background: var(--primary-red);
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(219, 68, 55, 0.2);
        }

        .btn-success {
            background: linear-gradient(to right, #28a745, #20c997);
            border: none;
            color: white;
        }

        .btn-success:hover {
            background: #28a745;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(40, 167, 69, 0.2);
        }

        /* Status Badges */
        .badge {
            font-weight: 500;
            font-size: 13px;
            padding: 7px 12px;
            display: inline-block;
            text-align: center;
            min-width: 80px;
            border-radius: 20px;
        }

        .alert-success {
            background-color: var(--badge-success-bg);
            color: var(--badge-success-color);
            border: 1px solid rgba(40, 167, 69, 0.2);
        }

        .alert-danger {
            background-color: var(--badge-danger-bg);
            color: var(--badge-danger-color);
            border: 1px solid rgba(220, 53, 69, 0.2);
        }

        /* Pagination */
        .pagination {
            margin-top: 25px;
            margin-bottom: 25px;
        }

        .page-item .page-link {
            width: 36px;
            height: 36px;
            margin: 0 5px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
            color: var(--text-dark);
            font-weight: 500;
            font-size: 14px;
            border: 1px solid var(--border-color);
            background-color: white;
            transition: all 0.3s;
        }

        .page-item .page-link:hover {
            color: var(--primary-red);
            border-color: var(--primary-red);
            background-color: var(--light-red);
        }

        .page-item.active .page-link {
            background: linear-gradient(to right, var(--secondary-red), var(--gradient-end));
            border-color: var(--gradient-end);
            color: white;
        }

        /* Search Suggestions */
        .search-suggestions {
            position: absolute;
            top: 100%;
            left: 0;
            right: 0;
            background: white;
            border: 1px solid var(--border-color);
            border-radius: 0 0 8px 8px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            max-height: 240px;
            overflow-y: auto;
            z-index: 1000;
            display: none;
        }

        .search-suggestions div {
            padding: 12px 15px;
            border-bottom: 1px solid #f0f0f0;
            cursor: pointer;
            transition: all 0.2s;
        }

        .search-suggestions div:hover {
            background-color: var(--light-red);
            color: var(--primary-red);
        }
    </style>

    <div class="container-fluid px-4">
        <div class="content-header row">
            <div class="d-flex justify-content-between align-items-center">
                <h2 class="content-title">Customers</h2>
            </div>
        </div>

        <header class="card-header mb-20">
            <div class="row align-items-center">
                <!-- Search Container -->
                <div class="col-md-8 col-sm-12 mb-3 mb-md-0">
                    <div class="search-container">
                        <form action="/admin/users/" method="get" class="d-inline" id="searchForm">
                            <div class="input-group border border-1 rounded-pill overflow-hidden">
                                <input type="text" class="form-control border-0 rounded-pill" 
                                       placeholder="Search name, email, phone..." 
                                       name="search" 
                                       id="searchInput" 
                                       value="<%= typeof search !== 'undefined' ? search : '' %>" 
                                       autocomplete="off">
                                <button class="btn btn-secondary border-0 rounded-pill" type="button" onclick="clearSearch()">Clear</button>
                            </div>
                        </form>
                        <div class="search-suggestions" id="searchSuggestions"></div>
                    </div>
                </div>
                <!-- Filter Container -->
                <div class="col-md-4 col-sm-12">
                    <div class="filter-container">
                        <select class="form-select" name="status" id="statusFilter">
                            <option value="all" <%= status === 'all' ? 'selected' : '' %>>All Status</option>
                            <option value="unblock" <%= status === 'unblock' ? 'selected' : '' %>>Active</option>
                            <option value="block" <%= status === 'block' ? 'selected' : '' %>>Blocked</option>
                        </select>
                    </div>
                </div>
            </div>
        </header>

        <div class="right">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th scope="col">Name</th>
                        <th scope="col">Email</th>
                        <th scope="col">Phone No</th>
                        <th scope="col">Action</th>
                        <th scope="col">Status</th>
                    </tr>
                </thead>
                <tbody id="customerTableBody">
                    <% for (let i = 0; i < data.length; i++) { %>
                    <tr>
                        <td><%= data[i].name %></td>
                        <td><%= data[i].email %></td>
                        <td><%= data[i].phone %></td>
                        <td class="text-start">
                            <% if (data[i].isBlocked) { %>
                            <button id="user-btn-<%= data[i]._id %>" 
                                    onclick="toggleUserStatus('<%= data[i]._id %>', 'true')" 
                                    class="btn-action btn-success">
                                Unblock
                            </button>
                            <% } else { %>
                            <button id="user-btn-<%= data[i]._id %>" 
                                    onclick="toggleUserStatus('<%= data[i]._id %>', 'false')" 
                                    class="btn-action btn-danger">
                                Block
                            </button>
                            <% } %>
                        </td>
                        <td class="text-start">
                            <span id="user-status-<%= data[i]._id %>" 
                                  class="badge rounded-pill alert-<%= data[i].isBlocked ? 'danger' : 'success' %>">
                                <%= data[i].isBlocked ? 'Blocked' : 'Active' %>
                            </span>
                        </td>
                    </tr>
                    <% } %>
                </tbody>
            </table>
        </div>

        <div class="container mt-3">
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center">
                    <!-- Previous Button -->
                    <li class="page-item <%= currentPage === 1 ? 'disabled' : '' %>">
                        <a class="page-link pagination-arrow" href="?page=<%= currentPage - 1 %>&search=<%= search %>&status=<%= status %>" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
        
                    <!-- Page Numbers with Ellipsis -->
                    <% 
                        const maxPagesToShow = 5;
                        let startPage = Math.max(1, currentPage - Math.floor(maxPagesToShow / 2));
                        let endPage = Math.min(totalPages, startPage + maxPagesToShow - 1);
        
                        // Adjust startPage if endPage is at totalPages
                        if (endPage === totalPages) {
                            startPage = Math.max(1, totalPages - maxPagesToShow + 1);
                        }
        
                        // Show first page and ellipsis if needed
                        if (startPage > 1) { %>
                            <li class="page-item">
                                <a class="page-link pagination-number" href="?page=1&search=<%= search %>&status=<%= status %>">1</a>
                            </li>
                            <% if (startPage > 2) { %>
                                <li class="page-item disabled">
                                    <span class="page-link">...</span>
                                </li>
                            <% } %>
                    <% } %>
        
                    <!-- Page Numbers -->
                    <% for (let i = startPage; i <= endPage; i++) { %>
                        <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                            <a class="page-link pagination-number" href="?page=<%= i %>&search=<%= search %>&status=<%= status %>"><%= i %></a>
                        </li>
                    <% } %>
        
                    <!-- Show last page and ellipsis if needed -->
                    <% if (endPage < totalPages) { %>
                        <% if (endPage < totalPages - 1) { %>
                            <li class="page-item disabled">
                                <span class="page-link">...</span>
                            </li>
                        <% } %>
                        <li class="page-item">
                            <a class="page-link pagination-number" href="?page=<%= totalPages %>&search=<%= search %>&status=<%= status %>"><%= totalPages %></a>
                        </li>
                    <% } %>
        
                    <!-- Next Button -->
                    <li class="page-item <%= currentPage === totalPages ? 'disabled' : '' %>">
                        <a class="page-link pagination-arrow" href="?page=<%= currentPage + 1 %>&search=<%= search %>&status=<%= status %>" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>

    <%- include("../../views/partials/admin/footer") %>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        let debounceTimeout;

        function clearSearch() {
            const searchInput = document.getElementById('searchInput');
            const statusFilter = document.getElementById('statusFilter');
            searchInput.value = '';
            statusFilter.value = 'all';
            searchCustomers('', 'all');
        }

        function searchCustomers(searchTerm, status) {
            clearTimeout(debounceTimeout);
            debounceTimeout = setTimeout(() => {
                $.ajax({
                    url: `/admin/users/?search=${encodeURIComponent(searchTerm)}&page=<%= currentPage %>&status=${status}`,
                    method: 'GET',
                    success: function(response) {
                        const parser = new DOMParser();
                        const doc = parser.parseFromString(response, 'text/html');
                        const newTableBody = doc.querySelector('#customerTableBody');
                        const newPagination = doc.querySelector('.pagination');
                        if (newTableBody) {
                            document.getElementById('customerTableBody').innerHTML = newTableBody.innerHTML;
                        }
                        if (newPagination) {
                            document.querySelector('.pagination').innerHTML = newPagination.innerHTML;
                        }
                    },
                    error: function(err) {
                        console.error('Search error:', err);
                    }
                });
            }, 300);
        }

        $('#searchInput').on('input', function() {
            const searchTerm = $(this).val().trim();
            const status = $('#statusFilter').val();
            searchCustomers(searchTerm, status);
        });

        $('#statusFilter').on('change', function() {
            const status = $(this).val();
            const searchTerm = $('#searchInput').val().trim();
            searchCustomers(searchTerm, status);
        });

        function toggleUserStatus(userId, isBlocked) {
            isBlocked = isBlocked === "true";
            let action = isBlocked ? "unblock" : "block";
            let newStatus = isBlocked ? "Active" : "Blocked";
            let newButtonClass = isBlocked ? "btn-action btn-danger" : "btn-action btn-success";
            let newButtonText = isBlocked ? "Block" : "Unblock";

            Swal.fire({
                title: `Are you sure you want to ${action} this user?`,
                text: "You can change this status later if needed.",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DB4437",
                cancelButtonColor: "#777777",
                confirmButtonText: `Yes, ${action} user!`
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/admin/${isBlocked ? 'un' : ''}blockCustomer`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ id: userId }),
                    })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        return response.json();
                    })
                    .then(data => {
                        if (data.success) {
                            Swal.fire({
                                title: action.charAt(0).toUpperCase() + action.slice(1) + "ed!",
                                text: `The user has been ${action}ed successfully.`,
                                icon: "success",
                                confirmButtonColor: "#DB4437"
                            }).then(() => {
                                let button = document.getElementById(`user-btn-${userId}`);
                                let statusBadge = document.getElementById(`user-status-${userId}`);

                                if (button && statusBadge) {
                                    button.setAttribute("onclick", `toggleUserStatus('${userId}', '${!isBlocked}')`);
                                    button.className = newButtonClass;
                                    button.innerText = newButtonText;
                                    statusBadge.className = `badge rounded-pill alert-${isBlocked ? "success" : "danger"}`;
                                    statusBadge.innerText = newStatus;
                                } else {
                                    location.reload();
                                }
                            });
                        } else {
                            throw new Error(data.message || 'Operation failed');
                        }
                    })
                    .catch(error => {
                        console.error("Error:", error);
                        Swal.fire({
                            title: "Error!",
                            text: `${error.message || "Something went wrong."}`,
                            icon: "error",
                            confirmButtonColor: "#DB4437"
                        });
                    });
                }
            });
        }
    </script>
</body>