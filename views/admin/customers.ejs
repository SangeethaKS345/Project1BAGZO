
    <style>
       
  .content-header {
  margin-bottom: 30px;
  }
  
  .content-title {
  color: #DB4437;
  font-size: 24px;
  font-weight: 600;
  }
  
  /* Search Box */
  .input-group.border {
  border: 1px solid #FF416C !important;
  border-radius: 30px;
  overflow: hidden;
  background-color: white;
  width: 500px;
  margin-left: 230px;
  }
  
  .input-group.border input {
  border: none !important;
  box-shadow: none;
  padding: 12px 15px;
  border-radius: 30px;
  }
  
  .input-group.border .btn {
  background-color: transparent;
  color: #FF416C;
  border: none;
  font-weight: 500;
  }
  
  /* Table Styles */
  .table {
  width: 100%;
  margin-bottom: 1rem;
  background-color: transparent;
  border-collapse: collapse;
  }
  
  .table-striped tbody tr:nth-of-type(odd) {
  background-color: rgba(0, 0, 0, 0.02);
  }
  
  .table thead th {
  vertical-align: bottom;
  border-bottom: 2px solid #dee2e6;
  padding: 12px;
  font-weight: 600;
  color: #444;
  }
  
  .table td {
  padding: 15px 12px;
  vertical-align: middle;
  border-bottom: 1px solid #e9ecef;
  }
  
  /* Button Styles */
  .btn {
  font-weight: 500;
  padding: 8px 16px;
  border-radius: 6px;
  transition: all 0.3s;
  width: 70px;
  }
  
  .btn-danger {
  background-color: #dc3545;
  border-color: #dc3545;
  }
  
  .btn-success {
  background-color: #28a745;
  border-color: #28a745;
  }
  
  .btn .text-white {
  color: white;
  text-decoration: none;
  }
  
  /* Status Badge */
  .badge {
  padding: 6px 10px;
  font-weight: 500;
  border-radius: 20px;
  font-size: 12px;
  width: 60px;
  display: inline-block;
  text-align: center;
  }
  
  .badge.alert-success {
  background-color: rgba(40, 167, 69, 0.1);
  color: #28a745;
  border: 1px solid rgba(40, 167, 69, 0.2);
  }
  
  .badge.alert-danger {
  background-color: rgba(220, 53, 69, 0.1);
  color: #dc3545;
  border: 1px solid rgba(220, 53, 69, 0.2);
  }
  
  /* Pagination */
  .container.mt-3 {
  display: flex;
  justify-content: center;
  width: 100%;
  margin-top: 20px !important;
  }
  
  .pagination {
  display: flex;
  padding-left: 0;
  list-style: none;
  border-radius: 0.25rem;
  margin-bottom: 20px;
  margin-right: 0 !important;
  }
  
  .pagination .page-item {
  margin: 0 3px;
  }
  
  .pagination .page-item.active .page-link {
  background-color: #FF416C;
  border-color: #FF416C;
  color: white;
  z-index: 1;
  }
  
  .pagination .page-link {
  position: relative;
  display: block;
  padding: 0.5rem 0.75rem;
  line-height: 1.25;
  color: #FF416C;
  background-color: #fff;
  border: 1px solid #dee2e6;
  border-radius: 4px;
  text-decoration: none;
  min-width: 38px;
  text-align: center;
  transition: all 0.2s;
  }
  
  .pagination .page-link:hover {
  color: white;
  background-color: #DB4437;
  border-color: #DB4437;
  }
  
  /* Fix for SweetAlert dialog */
  .swal2-popup {
  font-size: 14px;
  border-radius: 10px;
  }
  
  .swal2-title {
  font-size: 20px;
  font-weight: 600;
  }
  
  .swal2-confirm {
  background-color: #FF416C !important;
  }
    </style>
  </head>
  <%- include("../../views/partials/admin/header") %>
  <body>
  <div class="content-header row">
    <div class="d-flex justify-content-between align-items-center">
        <h2 class="content-title card-title">Customers</h2>
       
    </div>
  </div>         
        </div>
        
            <header class="card-header text-center mb-20">
                <form action="/admin/users/" method="get" class="d-inline">
                    <div class="input-group input-group-sm border border-1 border-grey rounded-pill" style="width: 500px; margin-left: 230px;">
                        <input type="text" class="form-control border-0 rounded-pill" placeholder="Search customers..." name="search">
                        <button class="btn border-0" type="submit">Search</button>
                    </div>
                </form>
            </header>
            <div class="right mt-5">
                <table class="table table-striped">
                    <thead>
                      <tr>
                        <th scope="col"><b>Name</b></th>
                        <th scope="col"><b>Email</b></th>
                        <th scope="col"><b>Phone No</b></th>
                        <th scope="col"><b>Action</b></th>
                        <th scope="col"><b>Status</b></th>
                      </tr>
                    </thead>
                    <tbody>
                        <% for (let i = 0; i < data.length; i++) { %>
                            <tr>
                                <td><%= data[i].name %></td>
                                <td><%= data[i].email %></td>
                                <td><%= data[i].phone %></td>
                                <td class="text-start">
                                    <% if (data[i].isBlocked) { %>
                                        <button id="user-btn-<%= data[i]._id %>" 
                                                onclick="toggleUserStatus('<%= data[i]._id %>', 'true')" 
                                                class="btn btn-success" 
                                                style="width: 70px">
                                            <span class="text-white text-center w-100 d-inline-block">Unblock</span>
                                        </button>
                                    <% } else { %>
                                        <button id="user-btn-<%= data[i]._id %>" 
                                                onclick="toggleUserStatus('<%= data[i]._id %>', 'false')" 
                                                class="btn btn-danger" 
                                                style="width: 70px">
                                            <span class="text-white text-center w-100 d-inline-block">Block</span>
                                        </button>
                                    <% } %>
                                </td>
                                <td class="text-start">
                                    <span id="user-status-<%= data[i]._id %>" 
                                          class="badge rounded-pill alert-<%= data[i].isBlocked ? 'danger' : 'success' %>"
                                          style="width: 60px">
                                        <%= data[i].isBlocked ? 'Blocked' : 'Active' %>
                                    </span>
                                </td>
                            </tr>
                        <% } %>
                        
                    </tbody>
                    
                  </table>
        </div>
        <div class="container mt-3">
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center mb-20" style="margin-right: 200px;">
                    <% for(let i = 1; i <= totalPages; i++) { %>
                        <li class="page-item <%= (i === currentPage) ? 'active' : '' %>">
                            <a class="page-link" href="?page=<%= i %>"> <%= i %> </a>
                        </li>
                    <% } %>                    
                </ul>
            </nav>
        </div>
      
        <%- include("../../views/partials/admin/footer") %>
  
        <script>
       function toggleUserStatus(userId, isBlocked) {
    isBlocked = isBlocked === "true";
    let action = isBlocked ? "unblock" : "block";
    let newStatus = isBlocked ? "Active" : "Blocked"; // Changed from "Unblocked" to "Active"
    let newButtonClass = isBlocked ? "btn-danger" : "btn-success";
    let newButtonText = isBlocked ? "Block" : "Unblock";
    
    Swal.fire({
        title: `Are you sure you want to ${action} this user?`,
        text: "You can change this status later if needed.",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: `Yes, ${action} user!`
    }).then((result) => {
        if (result.isConfirmed) {
            // Make an AJAX request with proper error handling
            fetch(`/admin/${isBlocked ? 'un' : ''}blockCustomer?id=${userId}`, {
                method: 'GET',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        title: action.charAt(0).toUpperCase() + action.slice(1) + "ed!",
                        text: `The user has been ${action}ed successfully.`,
                        icon: "success"
                    }).then(() => {
                        // Update UI elements
                        let button = document.getElementById(`user-btn-${userId}`);
                        let statusBadge = document.getElementById(`user-status-${userId}`);
  
                        if (button && statusBadge) {
                            // Update button attributes and content
                            button.setAttribute("onclick", `toggleUserStatus('${userId}', '${!isBlocked}')`);
                            button.className = `btn ${newButtonClass}`;
                            button.innerHTML = `<span class="text-white text-center w-100 d-inline-block">${newButtonText}</span>`;
  
                            // Update status badge
                            statusBadge.className = `badge rounded-pill alert-${isBlocked ? "success" : "danger"}`;
                            statusBadge.innerText = newStatus;
                        } else {
                            location.reload();
                        }
                    });
                } else {
                    throw new Error(data.message || 'Operation failed');
                }
            })
            .catch(error => {
                console.error("Error:", error);
                Swal.fire("Error!", `${error.message || "Something went wrong."}`, "error");
            });
        }
    });
  }
        </script>
  
  </body>