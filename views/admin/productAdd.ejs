<%- include("../../views/partials/admin/header") %>
<head>
   <!-- Add to your HTML head section -->
   <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
   <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css">
   <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>
   <link rel="stylesheet" href="/css/productAdd.css" type="text/css">
</head>
<section class="content-main">
    <div class="row">
        <div class="col-12">
            <div class="content-header">
                <h2 class="content-title">Add New Product</h2>
            </div>
        </div>
        <div class="col-lg-8 mx-auto">
            <div class="card mb-4 shadow-sm">
                <div class="card-body">
                    <form method="post" action="/admin/addProducts" enctype="multipart/form-data" id="productForm">                        onsubmit="return validateForm()">
                        <!-- Form-wide error alert -->
                        <div id="form-errors" class="alert alert-danger" style="display: none;"></div>
                        
                        <!-- Product Details Section -->
                        <div class="card mb-4 border-0 bg-light">
                            <div class="card-header bg-primary text-white">
                                <h5 class="mb-0"><i class="fas fa-info-circle me-2"></i>Basic Information</h5>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-6 mb-4">
                                        <label for="product_name" class="form-label fw-bold">Product Name <span class="text-danger">*</span></label>
                                        <input type="text" placeholder="Enter product name" name="productName"
                                            class="form-control border" id="product_name" required>
                                        <div id="productName-error" class="error-message text-danger small mt-1"></div>
                                    </div>
                                    
                                    <div class="col-md-6 mb-4">
                                        <label class="form-label fw-bold">Brand <span class="text-danger">*</span></label>
                                        <select class="form-select border" name="brand" required>
                                            <option value="">Select Brand</option>
                                            <% for (let i = 0; i < brand.length; i++) { %>  
                                                <option value="<%= brand[i]._id %>">
                                                    <%= brand[i].brandName %>
                                                </option>
                                            <% } %>
                                        </select>
                                        <div id="brand-error" class="error-message text-danger small mt-1"></div>
                                    </div>
                                </div>
                                
                                <div class="row">
                                    <div class="col-12 mb-4">
                                        <label class="form-label fw-bold">Product Description <span class="text-danger">*</span></label>
                                        <textarea placeholder="Enter detailed product description" id="descriptionid" name="description" 
                                            class="form-control border" rows="4" required></textarea>
                                        <div id="description-error" class="error-message text-danger small mt-1"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Pricing & Inventory Section -->
                        <div class="card mb-4 border-0 bg-light">
                            <div class="card-header bg-success text-white">
                                <h5 class="mb-0"><i class="fas fa-tag me-2"></i>Pricing & Inventory</h5>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-4 mb-4">
                                        <label class="form-label fw-bold">Regular price <span class="text-danger">*</span></label>
                                        <div class="input-group">
                                            <span class="input-group-text">₹</span>
                                            <input placeholder="0.00" name="regularPrice" type="number" step="0.01" min="0"
                                                class="form-control border" required>
                                        </div>
                                        <div id="regularPrice-error" class="error-message text-danger small mt-1"></div>
                                    </div>
                                    
                                    <div class="col-md-4 mb-4">
                                        <label class="form-label fw-bold">Sale price <span class="text-danger">*</span></label>
                                        <div class="input-group">
                                            <span class="input-group-text">₹</span>
                                            <input placeholder="0.00" name="salePrice" type="number" step="0.01" min="0" 
                                                class="form-control border" required>
                                        </div>
                                        <div id="salePrice-error" class="error-message text-danger small mt-1"></div>
                                    </div>
                                    
                                    <div class="col-md-4 mb-4">
                                        <label class="form-label fw-bold">Quantity <span class="text-danger">*</span></label>
                                        <input placeholder="1" name="quantity" type="number" min="0" 
                                            class="form-control border" required>
                                        <div id="quantity-error" class="error-message text-danger small mt-1"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Attributes Section -->
                        <div class="card mb-4 border-0 bg-light">
                            <div class="card-header bg-info text-white">
                                <h5 class="mb-0"><i class="fas fa-list-alt me-2"></i>Product Attributes</h5>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-6 mb-4">
                                        <label class="form-label fw-bold">Color <span class="text-danger">*</span></label>
                                        <input name="color" type="text" class="form-control border" placeholder="e.g., Red, Blue, Black" required>
                                        <div id="color-error" class="error-message text-danger small mt-1"></div>
                                    </div>
                                    
                                    <div class="col-md-6 mb-4">
                                        <label class="form-label fw-bold">Category <span class="text-danger">*</span></label>
                                        <select class="form-select border" name="category" required>
                                            <option value="">Select Category</option>
                                            <% for (let i=0; i<cat.length; i++){ %>
                                                <option value="<%=cat[i]._id %>">
                                                    <%=cat[i].name %>
                                                </option>
                                            <% } %>
                                        </select>
                                        <div id="category-error" class="error-message text-danger small mt-1"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Images Section -->
                        <div class="mb-4">
                            <label class="form-label fw-bold">Selected Images Preview:</label>
                            <div id="addedImagesContainer" class="d-flex flex-wrap gap-3 p-2 border rounded bg-white"></div>
                            <div id="images-error" class="error-message text-danger small mt-2"></div>
                        </div>
                        <div class="card mb-4 border-0 bg-light">
                            <div class="card-header bg-warning text-dark">
                                <h5 class="mb-0"><i class="fas fa-images me-2"></i>Product Images</h5>
                                <small class="d-block mt-1">At least 3 images required. You can crop images after uploading.</small>
                            </div>
                            
                            <div class="card-body">
                                <!-- Image preview thumbnails -->
                                <div class="mb-4">
                                    <label class="form-label fw-bold">Selected Images Preview:</label>
                                    <div id="addedImagesContainer" class="d-flex flex-wrap gap-3 p-2 border rounded bg-white"></div>
                                    <div id="images-error" class="error-message text-danger small mt-2"></div>
                                </div>
                                
                                <!-- Image upload cards -->
                                <div class="row">
                                    <!-- Image 1 -->
                                    <div class="col-md-6 mb-4">
                                        <div class="card h-100 border">
                                            <div class="card-header bg-light">
                                                <h6 class="mb-0">Image 1 <span class="text-danger">*</span></h6>
                                            </div>
                                            <div class="card-body">
                                                <div class="mb-3">
                                                    <input class="form-control" type="file" name="images" id="input1"
                                                           accept="image/png, image/jpeg, image/jpg"
                                                           onchange="handleImageSelect(event, 1)">
                                                </div>
                                                
                                                <div class="image-preview-container text-center mb-2">
                                                    <img src="" alt="" id="imgView1" class="img-fluid border rounded mb-2" style="display:none; max-height: 150px;">
                                                </div>
                                                
                                                <div class="button-group d-flex gap-2">
                                                    <button type="button" id="cropButton1" class="btn btn-sm btn-primary" onclick="initCropper(1)" style="display:none;">
                                                        <i class="fas fa-crop"></i> Crop
                                                    </button>
                                                    <button type="button" id="clearImage1" class="btn btn-sm btn-outline-danger" onclick="clearImage(1)" style="display:none;">
                                                        <i class="fas fa-times"></i> Clear
                                                    </button>
                                                </div>
                                                
                                                </div>
                                                
                                                <!-- Cropper container -->
                                                <div id="cropperContainer1" class="cropper-container mt-3" style="display:none;">
                                                    <div class="d-flex justify-content-end mb-2">
                                                        <button type="button" class="btn btn-sm btn-secondary" onclick="cancelCrop(1)">
                                                            Cancel
                                                        </button>
                                                        <button type="button" id="saveButton1" class="btn btn-sm btn-success ms-2" onclick="saveCroppedImage(1)">
                                                            Save Crop
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <!-- Image 2 -->
                                    <div class="col-md-6 mb-4">
                                        <div class="card h-100 border">
                                            <div class="card-header bg-light">
                                                <h6 class="mb-0">Image 2 <span class="text-danger">*</span></h6>
                                            </div>
                                            <div class="card-body">
                                                <div class="mb-3">
                                                    <input class="form-control" type="file" name="images" id="input2"
                                                        accept="image/png, image/jpeg, image/jpg"
                                                        onchange="handleImageSelect(event, 2)">
                                                </div>
                                                
                                                <div class="image-preview-container text-center mb-2">
                                                    <img src="" alt="" id="imgView2" class="img-fluid border rounded mb-2" style="display:none; max-height: 150px;">
                                                </div>
                                                
                                                <div class="button-group d-flex gap-2">
                                                    <button type="button" id="cropButton2" class="btn btn-sm btn-primary" onclick="initCropper(2)" style="display:none;">
                                                        <i class="fas fa-crop"></i> Crop
                                                    </button>
                                                    <button type="button" id="clearImage2" class="btn btn-sm btn-outline-danger" onclick="clearImage(2)" style="display:none;">
                                                        <i class="fas fa-times"></i> Clear
                                                    </button>
                                                </div>
                                                
                                                <!-- Cropper container -->
                                                <div id="cropperContainer2" class="cropper-container mt-3" style="display:none;">
                                                    <div class="d-flex justify-content-end mb-2">
                                                        <button type="button" class="btn btn-sm btn-secondary" onclick="cancelCrop(2)">
                                                            Cancel
                                                        </button>
                                                        <button type="button" id="saveButton2" class="btn btn-sm btn-success ms-2" onclick="saveCroppedImage(2)">
                                                            Save Crop
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <!-- Image 3 -->
                                    <div class="col-md-6 mb-4">
                                        <div class="card h-100 border">
                                            <div class="card-header bg-light">
                                                <h6 class="mb-0">Image 3 <span class="text-danger">*</span></h6>
                                            </div>
                                            <div class="card-body">
                                                <div class="mb-3">
                                                    <input class="form-control" type="file" name="images" id="input3"
                                                        accept="image/png, image/jpeg, image/jpg"
                                                        onchange="handleImageSelect(event, 3)">
                                                </div>
                                                
                                                <div class="image-preview-container text-center mb-2">
                                                    <img src="" alt="" id="imgView3" class="img-fluid border rounded mb-2" style="display:none; max-height: 150px;">
                                                </div>
                                                
                                                <div class="button-group d-flex gap-2">
                                                    <button type="button" id="cropButton3" class="btn btn-sm btn-primary" onclick="initCropper(3)" style="display:none;">
                                                        <i class="fas fa-crop"></i> Crop
                                                    </button>
                                                    <button type="button" id="clearImage3" class="btn btn-sm btn-outline-danger" onclick="clearImage(3)" style="display:none;">
                                                        <i class="fas fa-times"></i> Clear
                                                    </button>
                                                </div>
                                                
                                                <!-- Cropper container -->
                                                <div id="cropperContainer3" class="cropper-container mt-3" style="display:none;">
                                                    <div class="d-flex justify-content-end mb-2">
                                                        <button type="button" class="btn btn-sm btn-secondary" onclick="cancelCrop(3)">
                                                            Cancel
                                                        </button>
                                                        <button type="button" id="saveButton3" class="btn btn-sm btn-success ms-2" onclick="saveCroppedImage(3)">
                                                            Save Crop
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <!-- Image 4 (Optional) -->
                                    <div class="col-md-6 mb-4">
                                        <div class="card h-100 border">
                                            <div class="card-header bg-light">
                                                <h6 class="mb-0">Image 4 (Optional)</h6>
                                            </div>
                                            <div class="card-body">
                                                <div class="mb-3">
                                                    <input class="form-control" type="file" name="images" id="input4"
                                                        accept="image/png, image/jpeg, image/jpg"
                                                        onchange="handleImageSelect(event, 4)">
                                                </div>
                                                
                                                <div class="image-preview-container text-center mb-2">
                                                    <img src="" alt="" id="imgView4" class="img-fluid border rounded mb-2" style="display:none; max-height: 150px;">
                                                </div>
                                                
                                                <div class="button-group d-flex gap-2">
                                                    <button type="button" id="cropButton4" class="btn btn-sm btn-primary" onclick="initCropper(4)" style="display:none;">
                                                        <i class="fas fa-crop"></i> Crop
                                                    </button>
                                                    <button type="button" id="clearImage4" class="btn btn-sm btn-outline-danger" onclick="clearImage(4)" style="display:none;">
                                                        <i class="fas fa-times"></i> Clear
                                                    </button>
                                                </div>
                                                
                                                <!-- Cropper container -->
                                                <div id="cropperContainer4" class="cropper-container mt-3" style="display:none;">
                                                    <div class="d-flex justify-content-end mb-2">
                                                        <button type="button" class="btn btn-sm btn-secondary" onclick="cancelCrop(4)">
                                                            Cancel
                                                        </button>
                                                        <button type="button" id="saveButton4" class="btn btn-sm btn-success ms-2" onclick="saveCroppedImage(4)">
                                                            Save Crop
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Form Action Buttons -->
                        <div class="d-flex gap-2 justify-content-end mt-4">
                            <button class="btn btn-lg btn-outline-secondary" type="reset" onclick="resetForm()">
                                <i class="fas fa-undo me-2"></i>Reset
                            </button>
                            <button class="btn btn-lg btn-primary" type="submit">
                                <i class="fas fa-save me-2"></i>Publish Product
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>
<%- include("../../views/partials/admin/footer") %>
<script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

<script>
    // Global variables for image management
let croppers = {};
let selectedImages = {1: false, 2: false, 3: false, 4: false};

// Handle image selection
function handleImageSelect(event, index) {
    const file = event.target.files[0];
    if (!file) return;
    
    // Check file type
    if (!file.type.match('image/jpeg') && !file.type.match('image/png') && !file.type.match('image/jpg')) {
        alert('Please select a valid image file (JPEG, JPG or PNG)');
        event.target.value = '';
        return;
    }
    
    // Show the image preview
    const reader = new FileReader();
    reader.onload = function(e) {
        const imgView = document.getElementById(`imgView${index}`);
        imgView.src = e.target.result;
        imgView.style.display = 'block';
        
        // Show crop and clear buttons
        document.getElementById(`cropButton${index}`).style.display = 'block';
        document.getElementById(`clearImage${index}`).style.display = 'block';
        
        // Update selected images tracking
        selectedImages[index] = true;
        updateThumbnailsPreview();
    };
    
    reader.readAsDataURL(file);
}

// Initialize cropper
function initCropper(index) {
    const imgView = document.getElementById(`imgView${index}`);
    const cropperContainer = document.getElementById(`cropperContainer${index}`);
    
    // Destroy any existing cropper
    if (croppers[index]) {
        croppers[index].destroy();
    }
    
    // Create a clone of the image for cropping
    cropperContainer.innerHTML = '';
    const imgClone = document.createElement('img');
    imgClone.src = imgView.src;
    imgClone.style.maxWidth = '100%';
    cropperContainer.appendChild(imgClone);
    
    // Show cropper container
    cropperContainer.style.display = 'block';
    
    // Initialize Cropper.js
    croppers[index] = new Cropper(imgClone, {
        aspectRatio: 1, // Square aspect ratio
        viewMode: 1,
        responsive: true,
        zoomable: true,
        background: true
    });
}

// Save cropped image
function saveCroppedImage(index) {
    if (!croppers[index]) return;
    
    // Get cropped canvas
    const canvas = croppers[index].getCroppedCanvas({
        width: 800,
        height: 800
    });
    
    if (!canvas) return;
    
    // Update the preview image
    const imgView = document.getElementById(`imgView${index}`);
    imgView.src = canvas.toDataURL('image/jpeg');
    
    // Convert to blob and create a new file
    canvas.toBlob(function(blob) {
        const fileName = `cropped_image_${index}.jpg`;
        const croppedFile = new File([blob], fileName, { type: 'image/jpeg' });
        
        // Create a new FileList-like object
        const dataTransfer = new DataTransfer();
        dataTransfer.items.add(croppedFile);
        
        // Replace the file in the input
        const fileInput = document.getElementById(`input${index}`);
        fileInput.files = dataTransfer.files;
        
        // Hide cropper container
        cancelCrop(index);
        
        // Update thumbnails
        updateThumbnailsPreview();
    }, 'image/jpeg');
}

// Cancel cropping
function cancelCrop(index) {
    if (croppers[index]) {
        croppers[index].destroy();
        croppers[index] = null;
    }
    
    // Hide cropper container
    document.getElementById(`cropperContainer${index}`).style.display = 'none';
}

// Clear selected image
function clearImage(index) {
    // Reset the file input
    document.getElementById(`input${index}`).value = '';
    
    // Hide the image preview
    const imgView = document.getElementById(`imgView${index}`);
    imgView.style.display = 'none';
    imgView.src = '';
    
    // Hide crop and clear buttons
    document.getElementById(`cropButton${index}`).style.display = 'none';
    document.getElementById(`clearImage${index}`).style.display = 'none';
    
    // Cancel any active cropping
    cancelCrop(index);
    
    // Update selected images tracking
    selectedImages[index] = false;
    updateThumbnailsPreview();
}

// Update thumbnails in the preview area
function updateThumbnailsPreview() {
    const container = document.getElementById('addedImagesContainer');
    container.innerHTML = '';
    
    // Count how many images we have
    let count = 0;
    
    // Add thumbnails for each selected image
    for (let i = 1; i <= 4; i++) {
        const imgView = document.getElementById(`imgView${i}`);
        if (imgView.src && imgView.style.display !== 'none') {
            count++;
            
            // Create thumbnail container
            const thumbContainer = document.createElement('div');
            thumbContainer.className = 'thumbnail position-relative';
            
            // Create thumbnail image
            const thumb = document.createElement('img');
            thumb.src = imgView.src;
            thumb.alt = `Image ${i}`;
            thumb.className = 'img-thumbnail';
            thumb.style.width = '100px';
            thumb.style.height = '100px';
            thumb.style.objectFit = 'cover';
            
            // Create label
            const label = document.createElement('div');
            label.className = 'badge bg-primary position-absolute top-0 start-0';
            label.textContent = `Image ${i}`;
            
            // Add to container
            thumbContainer.appendChild(thumb);
            thumbContainer.appendChild(label);
            container.appendChild(thumbContainer);
        }
    }
    
    // Update error message if needed
    const errorElement = document.getElementById('images-error');
    if (count < 3) {
        errorElement.textContent = `You've selected ${count} image(s). At least 3 images are required.`;
        errorElement.style.display = 'block';
    } else {
        errorElement.textContent = '';
        errorElement.style.display = 'none';
    }
}

// Handle form submission with AJAX
document.getElementById('productForm').addEventListener('submit', function(event) {
        event.preventDefault(); // Prevent default form submission

        if (!validateForm()) {
            return; // Stop if validation fails
        }

        const formData = new FormData(this);

        fetch('/admin/addProducts', {
            method: 'POST',
            body: formData
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Show success message with SweetAlert2
                Swal.fire({
                    icon: 'success',
                    title: 'Success!',
                    text: 'Product added successfully!',
                    confirmButtonText: 'OK'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Optionally reset the form or redirect
                        resetForm();
                        // Uncomment below line if you want to redirect after success
                        // window.location.href = '/admin/addProducts';
                    }
                });
            } else {
                // Show error message if product addition fails
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: data.error || 'Failed to add product. Please try again.',
                });
            }
        })
        .catch(error => {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'An unexpected error occurred. Please try again.',
            });
        });
    });

// Reset the form
function resetForm() {
    // Clear all images
    for (let i = 1; i <= 4; i++) {
        clearImage(i);
    }
    
    // Reset all form fields and error messages
    document.querySelectorAll('.error-message').forEach(element => {
        element.textContent = '';
        element.style.display = 'none';
    });
    
    document.getElementById('form-errors').style.display = 'none';
}

// Main validation function
function validateForm() {
    // Clear previous error messages
    document.querySelectorAll('.error-message').forEach(element => {
        element.textContent = '';
    });
    document.getElementById('form-errors').style.display = 'none';
    
    let isValid = true;
    
    // Basic field validations
    const productName = document.getElementById('product_name').value.trim();
    if (productName === '') {
        document.getElementById('productName-error').textContent = 'Product name is required';
        isValid = false;
    }
    
    const brand = document.getElementsByName('brand')[0].value;
    if (!brand) {
        document.getElementById('brand-error').textContent = 'Please select a brand';
        isValid = false;
    }
    
    const description = document.getElementById('descriptionid').value.trim();
    if (description === '') {
        document.getElementById('description-error').textContent = 'Product description is required';
        isValid = false;
    }
    
    const regularPrice = parseFloat(document.getElementsByName('regularPrice')[0].value);
    if (isNaN(regularPrice) || regularPrice <= 0) {
        document.getElementById('regularPrice-error').textContent = 'Please enter a valid regular price';
        isValid = false;
    }
    
    const salePrice = parseFloat(document.getElementsByName('salePrice')[0].value);
    if (isNaN(salePrice) || salePrice < 0) {
        document.getElementById('salePrice-error').textContent = 'Please enter a valid sale price';
        isValid = false;
    }
    
    if (salePrice >= regularPrice) {
        document.getElementById('salePrice-error').textContent = 'Sale price must be less than regular price';
        isValid = false;
    }
    
    const quantity = parseInt(document.getElementsByName('quantity')[0].value);
    if (isNaN(quantity) || quantity < 0) {
        document.getElementById('quantity-error').textContent = 'Please enter a valid quantity';
        isValid = false;
    }
    
    const color = document.getElementsByName('color')[0].value.trim();
    if (color === '') {
        document.getElementById('color-error').textContent = 'Color is required';
        isValid = false;
    }
    
    const category = document.getElementsByName('category')[0].value;
    if (!category) {
        document.getElementById('category-error').textContent = 'Please select a category';
        isValid = false;
    }
    
    // Check if we have at least 3 images
    let imageCount = 0;
    for (let i = 1; i <= 4; i++) {
        if (selectedImages[i]) {
            imageCount++;
        }
    }
    
    if (imageCount < 3) {
        document.getElementById('images-error').textContent = `You've selected ${imageCount} image(s). At least 3 images are required.`;
        isValid = false;
    }
    
    // If validation failed, show a summary message
    if (!isValid) {
        document.getElementById('form-errors').textContent = 'Please correct the errors below before submitting.';
        document.getElementById('form-errors').style.display = 'block';
    }
    
    return isValid;
}

// Initialize when document is loaded
document.addEventListener('DOMContentLoaded', function() {
    // Make sure all image-related UI elements are in their initial state
    for (let i = 1; i <= 4; i++) {
        document.getElementById(`imgView${i}`).style.display = 'none';
        document.getElementById(`cropButton${i}`).style.display = 'none';
        document.getElementById(`clearImage${i}`).style.display = 'none';
        document.getElementById(`cropperContainer${i}`).style.display = 'none';
    }
    
    // Set up validation on form submission
    const form = document.querySelector('form');
    form.addEventListener('submit', function(event) {
        if (!validateForm()) {
            event.preventDefault();
        }
    });
});
</script>
