<%- include("../../views/partials/admin/header") %>

<head>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css" />
  <link rel="stylesheet" href="/css/category.css">
</head>

<body>
  <section class="content-main">
    <div class="content-header">
      <div>
        <h2 class="content-title card-title">Category</h2>
      </div>
    </div>

    <header class="search-container text-center mb-4">
      <form action="/admin/category/" method="get" class="d-inline">
        <div class="input-group input-group-sm rounded-pill" style="width: 500px; margin: 0 auto;">
          <input type="text" class="form-control rounded-pill" placeholder="Search categories" name="search" />
          <button class="btn" type="submit">Search</button>
        </div>
      </form>
    </header>

    <div class="card">
      <div class="card-body">
        <div class="row">
          <!-- Add Category Form -->
          <div class="col-md-3">
            <div class="form-container">
              <form method="post" action="/admin/addCategory" onsubmit="return handleFormSubmit(event)">
                <div class="mb-4">
                  <label for="product_name" class="form-label">Name</label>
                  <input type="text" name="name" placeholder="Type here" class="form-control" id="product_name" novalidate/>
                  <div id="name-error" class="error-message"></div>
                </div>
                <div class="mb-4">
                  <label class="form-label">Description</label>
                  <textarea placeholder="Type here" name="description" class="form-control" id="descriptionId" novalidate></textarea>
                  <div id="description-error" class="error-message"></div>
                </div>
                <div class="d-grid">
                  <button class="btn btn-primary" type="submit">Create category</button>
                </div>
              </form>
            </div>
          </div>

          <!-- Category List Table -->
          <div class="col-md-9">
            <div class="table-responsive">
              <table class="table">
                <thead>
                  <tr>
                    <th></th>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Status</th>
                    <th>List/Unlist</th>
                    <th>Edit</th>
                  </tr>
                </thead>
                <tbody>
                  <% if (cat && cat.length > 0) { %>
                  <% cat.forEach((category) => { %>
                  <tr>
                   
                    <tr>
                      <td></td>
                      <td class="text-start"><%= category.name %></td>
                      <td class="text-start"><%= category.description %></td>
                      <td class="text-start">
                        <span class="status-badge <%= category.isListed ? 'status-listed' : 'status-unlisted' %>" id="status-<%= category._id %>">
                          <%= category.isListed ? 'LISTED' : 'UNLISTED' %>
                        </span>
                      </td>
                      <td class="text-start">
                        <button id="toggle-btn-<%= category._id %>" 
                                onclick="toggleCategoryStatus('<%= category._id %>', '<%= category.isListed %>')" 
                                class="btn <%= category.isListed ? 'btn-danger' : 'btn-success' %> action-btn">
                          <%= category.isListed ? 'Unlist' : 'List' %>
                        </button>
                      </td>
                      <td class="text-start">
                        <a href="/admin/editCategory?id=<%= category._id %>" class="btn btn-info">Edit</a>
                      </td>
                    </tr>
                  <% }) %>
                  <% } else { %>
                  <tr>
                    <td colspan="6" class="text-center">No categories found.</td>
                  </tr>
                  <% } %>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Pagination -->
    <div class="pagination-container">
      <% if (currentPage > 1) { %>
      <a href="?page=<%= currentPage - 1 %>">&laquo; Previous</a>
      <% } %>
      <% for (let i = 1; i <= totalPages; i++) { %>
      <% if (i === currentPage) { %>
      <span class="current-page"><%= i %></span>
      <% } else { %>
      <a href="?page=<%= i %>"><%= i %></a>
      <% } %>
      <% } %>
      <% if (currentPage < totalPages) { %>
      <a href="?page=<%= currentPage + 1 %>">Next &raquo;</a>
      <% } %>
    </div>
  </section>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
    async function handleFormSubmit(event) {
      event.preventDefault();
      if (!validateForm()) {
        return false;
      }

      const name = document.querySelector('input[name="name"]').value.trim();
      const description = document.getElementById("descriptionId").value.trim();

      try {
        const response = await fetch('/admin/addCategory', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            name,
            description
          }),
        });

        const data = await response.json();

        if (!response.ok) {
          throw new Error(data.error || 'Something went wrong');
        }

        await Swal.fire({
          icon: 'success',
          title: 'Success',
          text: data.message,
          confirmButtonColor: "#FF416C"
        });

        window.location.reload();
      } catch (error) {
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: error.message,
          confirmButtonColor: "#DB4437"
        });
      }
    }

    function validateForm() {
      clearErrorMessages();

      const name = document.getElementsByName("name")[0].value.trim();
      const description = document.getElementById("descriptionId").value.trim();
      let isValid = true;

      if (name === "") {
        displayErrorMessage("name-error", "Please enter a category name.");
        isValid = false;
      } else if (!/^[a-zA-Z\s]+$/.test(name)) {
        displayErrorMessage("name-error", "Category name should contain only alphabetic characters.");
        isValid = false;
      }

      if (description === "") {
        displayErrorMessage("description-error", "Please enter a description.");
        isValid = false;
      }

      return isValid;
    }

    function displayErrorMessage(elementId, message) {
      const errorElement = document.getElementById(elementId);
      errorElement.innerText = message;
      errorElement.style.display = "block";
    }

    function clearErrorMessages() {
      const errorElements = document.getElementsByClassName("error-message");
      Array.from(errorElements).forEach((element) => {
        element.innerText = "";
        element.style.display = "none";
      });
    }

    function toggleCategoryStatus(categoryId, isListed) {
  isListed = isListed === 'true' || isListed === true;
  const action = isListed ? 'unlist' : 'list';

  Swal.fire({
    title: `Are you sure you want to ${action} this category?`,
    text: "You can change it later if needed.",
    icon: "warning",
    showCancelButton: true,
    confirmButtonColor: "#FF416C",
    cancelButtonColor: "#DB4437",
    confirmButtonText: `Yes, ${action} it!`
  }).then((result) => {
    if (result.isConfirmed) {
      fetch(`/admin/${action}Category?id=${categoryId}`, {
        method: "GET",
        headers: {
          "Content-Type": "application/json"
        }
      })
      .then(response => {
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
        return response.json();
      })
      .then(data => {
        if (data.success) {
          // Update the UI elements
          const statusBadge = document.getElementById(`status-${categoryId}`);
          const toggleButton = document.getElementById(`toggle-btn-${categoryId}`);

          // If we're listing the category
          if (action === 'list') {
            statusBadge.className = 'status-badge status-listed';
            statusBadge.textContent = 'LISTED';
            toggleButton.className = 'btn btn-danger action-btn';
            toggleButton.textContent = 'Unlist';
            // Update the onclick with the new status (true for listed)
            toggleButton.setAttribute('onclick', `toggleCategoryStatus('${categoryId}', 'true')`);
          } else {
            // If we're unlisting the category
            statusBadge.className = 'status-badge status-unlisted';
            statusBadge.textContent = 'UNLISTED';
            toggleButton.className = 'btn btn-success action-btn';
            toggleButton.textContent = 'List';
            // Update the onclick with the new status (false for unlisted)
            toggleButton.setAttribute('onclick', `toggleCategoryStatus('${categoryId}', 'false')`);
          }

          Swal.fire({
            title: 'Success!',
            text: data.message,
            icon: 'success',
            confirmButtonColor: "#FF416C"
          });
        } else {
          throw new Error(data.message || "Something went wrong");
        }
      })
      .catch(error => {
        console.error("Error:", error);
        Swal.fire({
          title: "Error!",
          text: error.message || "Something went wrong",
          icon: "error",
          confirmButtonColor: "#DB4437"
        });
      });
    }
  });
}
    
  </script>
  <%- include("../../views/partials/admin/footer") %>