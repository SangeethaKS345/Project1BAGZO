

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Product</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
    <style>
        .error-message {
            color: red;
            font-size: 0.8rem;
            margin-top: 5px;
        }
        .image-container {
            border: 1px solid #eee;
            border-radius: 5px;
            padding: 15px;
            margin-bottom: 20px;
        }
        .cropper-container {
            margin-top: 15px;
        }
    </style>
    <%- include("../../views/partials/admin/header") %>
</head>
<body>
    <section class="content-main">
        <div class="row">
            <div class="col-9">
                <div class="content-header">
                    <h2 class="content-title">Edit Product</h2>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="card mb-4">
                    <div class="card-body">
                        <form method="POST" action="/admin/editProduct/<%= product._id%>" enctype="multipart/form-data"
                            id="productForm">
                            <div class="mb-4">
                                <label for="product_name" class="form-label">Product Name</label>
                                <input type="text" name="productName" value="<%= product.productName %>"
                                    class="form-control border" id="product_name">
                                    <input type="hidden" value="<%= product.productImage[0] || '' %>" name="image1" id="hiddenImage1">
                                    <input type="hidden" value="<%= product.productImage[1] || '' %>" name="image2" id="hiddenImage2">
                                    <input type="hidden" value="<%= product.productImage[2] || '' %>" name="image3" id="hiddenImage3">
                                    <input type="hidden" value="<%= product.productImage[3] || '' %>" name="image4" id="hiddenImage4">
    
                                <div id="productName-error" class="error-message"></div>
                            </div>
                            <div class="col-lg-4 mb-4">
                                <label class="form-label">Brand</label>
                                <select class="form-select border" name="brand">
                                    <%for(let i=0; i<brand.length; i++) {%>
                                        <option value="<%= brand[i].brandName %>" <%= product.brand === brand[i].brandName ? 'selected' : '' %>>
                                            <%=brand[i].brandName%>
                                        </option>
                                    <%}%>
                                </select>
                                <div id="brand-error" class="error-message"></div>
                            </div>
                            <div class="mb-4">
                                <label class="form-label">Full description</label>
                                <textarea name="descriptionData" class="form-control border" rows="4"><%=product.description%></textarea>
                                <div id="description-error" class="error-message"></div>
                            </div>
                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Regular price (₹)</label>
                                        <input placeholder="₹" name="regularPrice" type="text"
                                            value="<%=product.regularPrice%>" class="form-control border">
                                        <div id="regularPrice-error" class="error-message"></div>
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Sale price (₹)</label>
                                        <input name="salesPrice" placeholder="₹" type="text" value="<%=product.salesPrice%>"
                                            class="form-control border">
                                        <div id="salesPrice-error" class="error-message"></div>
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Quantity</label>
                                        <input name="quantity" type="text" value="<%=product.quantity%>"
                                            class="form-control border">
                                        <div id="quantity-error" class="error-message"></div>
                                    </div>
                                </div>
                            </div>
    
                            <div class="card mb-4">
                                <div class="card-body">
                                    <div class="row gx-2">
                                        <div class="col-sm-6 mb-3">
                                            <label class="form-label">Category</label>
                                            <select class="form-select border" style="width: 150px;" name="category">
                                                <%for( let i=0;i<cat.length;i++){%>
                                                    <option value="<%= cat[i].name%>" <%= product.category === cat[i].name ? 'selected' : '' %>>
                                                        <%=cat[i].name%>
                                                    </option>
                                                <%}%>
                                            </select>
                                            <div id="category-error" class="error-message"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="card mb-2">
                                <div class="card-header">
                                    <h4>Product Images</h4>
                                    <p class="text-muted small">Right-click on existing images to crop them</p>
                                </div>
    
                                <div class="card-body">
                                    <!-- First Image -->
                                    <div class="card-body image-container">
                                        <div class="d-flex align-items-center mb-2">
                                            <h5 class="mr-3">Main Image</h5>
                                            <div class="ms-auto">
                                                <button type="button" class="btn btn-sm btn-danger delete-image-btn" data-image-id="1">Delete</button>
                                                <button type="button" class="btn btn-sm btn-warning reset-image-btn" data-image-id="1">Reset</button>
                                            </div>
                                        </div>
                                        <div class="image-preview-container">
                                            <img src="/uploads/re-image/<%= product.productImage[0] || 'placeholder.jpg' %>" 
                                                alt="Product Image 1" id="imgView1" class="img-thumbnail" 
                                                style="max-width: 200px; max-height: 200px;">
                                        </div>
                                        <div class="mt-2">
                                            <input class="form-control" type="file" name="images" id="input1"
                                                accept="image/png, image/jpeg, image/jpg"
                                                onchange="handleImageSelect(event, 1)">
                                            <div id="image1-error" class="error-message"></div>
                                        </div>
                                        <div class="cropper-container mt-3" id="cropperContainer1" style="display:none;">
                                            <div style="max-width: 400px;">
                                                <div id="cropperWrapper1" style="width: 100%; max-height: 300px;"></div>
                                                <div class="d-flex mt-2">
                                                    <button type="button" class="btn btn-primary crop-save-btn" data-index="1">Save Cropped</button>
                                                    <button type="button" class="btn btn-secondary ms-2 crop-cancel-btn" data-index="1">Cancel</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
    
                                    <!-- Second Image -->
                                    <div class="card-body image-container">
                                        <div class="d-flex align-items-center mb-2">
                                            <h5 class="mr-3">Image 2</h5>
                                            <div class="ms-auto">
                                                <button type="button" class="btn btn-sm btn-danger delete-image-btn" data-image-id="2">Delete</button>
                                                <button type="button" class="btn btn-sm btn-warning reset-image-btn" data-image-id="2">Reset</button>
                                            </div>
                                        </div>
                                        <div class="image-preview-container">
                                            <img src="/uploads/re-image/<%= product.productImage[1] || 'placeholder.jpg' %>" 
                                                alt="Product Image 2" id="imgView2" class="img-thumbnail" 
                                                style="max-width: 200px; max-height: 200px;">
                                        </div>
                                        <div class="mt-2">
                                            <input class="form-control" type="file" name="images" id="input2"
                                                accept="image/png, image/jpeg, image/jpg"
                                                onchange="handleImageSelect(event, 2)">
                                            <div id="image2-error" class="error-message"></div>
                                        </div>
                                        <div class="cropper-container mt-3" id="cropperContainer2" style="display:none;">
                                            <div style="max-width: 400px;">
                                                <div id="cropperWrapper2" style="width: 100%; max-height: 300px;"></div>
                                                <div class="d-flex mt-2">
                                                    <button type="button" class="btn btn-primary crop-save-btn" data-index="2">Save Cropped</button>
                                                    <button type="button" class="btn btn-secondary ms-2 crop-cancel-btn" data-index="2">Cancel</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
    
                                    <!-- Third Image -->
                                    <div class="card-body image-container">
                                        <div class="d-flex align-items-center mb-2">
                                            <h5 class="mr-3">Image 3</h5>
                                            <div class="ms-auto">
                                                <button type="button" class="btn btn-sm btn-danger delete-image-btn" data-image-id="3">Delete</button>
                                                <button type="button" class="btn btn-sm btn-warning reset-image-btn" data-image-id="3">Reset</button>
                                            </div>
                                        </div>
                                        <div class="image-preview-container">
                                            <img src="/uploads/re-image/<%= product.productImage[2] || 'placeholder.jpg' %>" 
                                                alt="Product Image 3" id="imgView3" class="img-thumbnail" 
                                                style="max-width: 200px; max-height: 200px;">
                                        </div>
                                        <div class="mt-2">
                                            <input class="form-control" type="file" name="images" id="input3"
                                                accept="image/png, image/jpeg, image/jpg"
                                                onchange="handleImageSelect(event, 3)">
                                            <div id="image3-error" class="error-message"></div>
                                        </div>
                                        <div class="cropper-container mt-3" id="cropperContainer3" style="display:none;">
                                            <div style="max-width: 400px;">
                                                <div id="cropperWrapper3" style="width: 100%; max-height: 300px;"></div>
                                                <div class="d-flex mt-2">
                                                    <button type="button" class="btn btn-primary crop-save-btn" data-index="3">Save Cropped</button>
                                                    <button type="button" class="btn btn-secondary ms-2 crop-cancel-btn" data-index="3">Cancel</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
    
                                    <!-- Fourth Image -->
                                    <div class="card-body image-container">
                                        <div class="d-flex align-items-center mb-2">
                                            <h5 class="mr-3">Image 4</h5>
                                            <div class="ms-auto">
                                                <button type="button" class="btn btn-sm btn-danger delete-image-btn" data-image-id="4">Delete</button>
                                                <button type="button" class="btn btn-sm btn-warning reset-image-btn" data-image-id="4">Reset</button>
                                            </div>
                                        </div>
                                        <div class="image-preview-container">
                                            <img src="/uploads/re-image/<%= product.productImage[3] || 'placeholder.jpg' %>" 
                                                alt="Product Image 4" id="imgView4" class="img-thumbnail" 
                                                style="max-width: 200px; max-height: 200px;">
                                        </div>
                                        <div class="mt-2">
                                            <input class="form-control" type="file" name="images" id="input4"
                                                accept="image/png, image/jpeg, image/jpg"
                                                onchange="handleImageSelect(event, 4)">
                                            <div id="image4-error" class="error-message"></div>
                                        </div>
                                        <div class="cropper-container mt-3" id="cropperContainer4" style="display:none;">
                                            <div style="max-width: 400px;">
                                                <div id="cropperWrapper4" style="width: 100%; max-height: 300px;"></div>
                                                <div class="d-flex mt-2">
                                                    <button type="button" class="btn btn-primary crop-save-btn" data-index="4">Save Cropped</button>
                                                    <button type="button" class="btn btn-secondary ms-2 crop-cancel-btn" data-index="4">Cancel</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="d-flex mt-4">
                                <button class="btn btn-md btn-primary rounded font-sm hover-up me-2" id="updatebtn" type="button">
                                    Update Product
                                </button>
                                <button class="btn btn-md btn-warning rounded font-sm hover-up me-2" id="resetAllBtn" type="button">
                                    Reset All Images
                                </button>
                                <button class="btn btn-md btn-secondary rounded font-sm hover-up" id="clearAllBtn" type="button">
                                    Clear All Changes
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </section>

<!-- Scripts -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<!-- Your custom JavaScript -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<!-- Your custom JavaScript -->
<script>
// Global variables to store croppers
const croppers = {};
let originalFormData = {};

// Store original form data when page loads
document.addEventListener('DOMContentLoaded', function() {
    // Save original form data
    saveOriginalFormData();
    
    // Set up event listeners
    setupEventListeners();
});

function saveOriginalFormData() {
    const form = document.getElementById('productForm');
    originalFormData = {
        productName: form.productName.value,
        brand: form.brand.value,
        descriptionData: form.descriptionData.value,
        regularPrice: form.regularPrice.value,
        salesPrice: form.salesPrice.value,
        quantity: form.quantity.value,
        category: form.category.value,
        image1: form.hiddenImage1.value,
        image2: form.hiddenImage2.value,
        image3: form.hiddenImage3.value,
        image4: form.hiddenImage4.value
    };
}

function setupEventListeners() {
    // Image delete buttons
    document.querySelectorAll('.delete-image-btn').forEach(btn => {
        btn.addEventListener('click', function() {
            const imageId = this.dataset.imageId;
            deleteImage(imageId);
        });
    });
    
    // Image reset buttons
    document.querySelectorAll('.reset-image-btn').forEach(btn => {
        btn.addEventListener('click', function() {
            const imageId = this.dataset.imageId;
            resetImage(imageId);
        });
    });
    
    // Crop save buttons
    document.querySelectorAll('.crop-save-btn').forEach(btn => {
        btn.addEventListener('click', function() {
            const index = this.dataset.index;
            saveCroppedImage(index);
        });
    });
    
    // Crop cancel buttons
    document.querySelectorAll('.crop-cancel-btn').forEach(btn => {
        btn.addEventListener('click', function() {
            const index = this.dataset.index;
            cancelCropping(index);
        });
    });
    
    // Update button
    document.getElementById('updatebtn').addEventListener('click', function() {
        validateAndSubmitForm();
    });
    
    // Reset All button
    document.getElementById('resetAllBtn').addEventListener('click', function() {
        resetAllImages();
    });
    
    // Clear All Changes button
    document.getElementById('clearAllBtn').addEventListener('click', function() {
        clearAllChanges();
    });
}

// Handle image selection for upload and cropping
// Handle image selection for upload and cropping
function handleImageSelect(event, index) {
    const file = event.target.files[0];
    if (!file) return;
    
    // Check file type
    if (!file.type.match('image/jpeg') && !file.type.match('image/png') && !file.type.match('image/jpg')) {
        Swal.fire('Error', 'Please select a valid image file (JPEG, JPG or PNG)', 'error');
        event.target.value = '';
        return;
    }
    
    // Mark this image as "changed" by setting the hidden input to empty
    // This line ensures the backend knows we're replacing the image
    document.getElementById(`hiddenImage${index}`).value = 'replaced';
    
    // Show cropper
    const reader = new FileReader();
    reader.onload = function(e) {
        // Get the elements
        const imgView = document.getElementById(`imgView${index}`);
        const cropperContainer = document.getElementById(`cropperContainer${index}`);
        const cropperWrapper = document.getElementById(`cropperWrapper${index}`);
        
        // Setup for cropping
        cropperContainer.style.display = 'block';
        
        // Create image element for cropper
        const img = document.createElement('img');
        img.id = `cropperImage${index}`;
        img.src = e.target.result;
        img.style.maxWidth = '100%';
        
        // Clear previous content and add new image
        cropperWrapper.innerHTML = '';
        cropperWrapper.appendChild(img);
        
        // Initialize cropper
        if (croppers[index]) {
            croppers[index].destroy();
        }
        
        croppers[index] = new Cropper(img, {
            aspectRatio: 1,
            viewMode: 1,
            autoCropArea: 1,
            responsive: true
        });
    };
    
    reader.readAsDataURL(file);
}
// Save cropped image
function saveCroppedImage(index) {
    if (!croppers[index]) return;
    
    // Get cropped canvas
    const canvas = croppers[index].getCroppedCanvas({
        width: 800,
        height: 800
    });
    
    if (!canvas) return;
    
    // Update preview image
    const imgView = document.getElementById(`imgView${index}`);
    imgView.src = canvas.toDataURL();
    
    // Convert to Blob and create File
    canvas.toBlob(function(blob) {
        const fileName = `cropped_image_${index}.jpg`;
        const croppedFile = new File([blob], fileName, { type: 'image/jpeg' });
        
        // Create a new FileList-like object
        const dataTransfer = new DataTransfer();
        dataTransfer.items.add(croppedFile);
        
        // Set the file input value
        const fileInput = document.getElementById(`input${index}`);
        fileInput.files = dataTransfer.files;
        
        // Hide cropper
        cancelCropping(index);
        
        // Set hidden input value to empty (indicating it's changed)
        document.getElementById(`hiddenImage${index}`).value = '';
    }, 'image/jpeg');
}

// Cancel cropping
function cancelCropping(index) {
    if (croppers[index]) {
        croppers[index].destroy();
        croppers[index] = null;
    }
    
    document.getElementById(`cropperContainer${index}`).style.display = 'none';
    
    // If no file was selected, reset the file input
    if (document.getElementById(`input${index}`).files.length === 0) {
        document.getElementById(`input${index}`).value = '';
    }
}

// Delete image
function deleteImage(imageId) {
    Swal.fire({
        title: 'Delete Image',
        text: 'Are you sure you want to delete this image?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Yes, delete it!'
    }).then((result) => {
        if (result.isConfirmed) {
            // Clear the file input
            document.getElementById(`input${imageId}`).value = '';
            
            // Set preview to placeholder
            document.getElementById(`imgView${imageId}`).src = '/uploads/re-image/placeholder.jpg';
            
            // Set hidden input to indicate deletion
            document.getElementById(`hiddenImage${imageId}`).value = 'deleted';
            
            // If there's an active cropper, destroy it
            if (croppers[imageId]) {
                croppers[imageId].destroy();
                croppers[imageId] = null;
                document.getElementById(`cropperContainer${imageId}`).style.display = 'none';
            }
            
            Swal.fire('Deleted!', 'The image has been deleted.', 'success');
        }
    });
}

// Reset single image
function resetImage(imageId) {
    const originalImage = originalFormData[`image${imageId}`];
    
    // Reset hidden input value
    document.getElementById(`hiddenImage${imageId}`).value = originalImage;
    
    // Reset file input
    document.getElementById(`input${imageId}`).value = '';
    
    // Reset preview image
    document.getElementById(`imgView${imageId}`).src = `/uploads/re-image/${originalImage}`;
    
    Swal.fire('Reset', 'Image has been reset to original.', 'info');
}

// Reset all images
function resetAllImages() {
    Swal.fire({
        title: 'Reset All Images',
        text: 'Are you sure you want to reset all images to their original state?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, reset all!'
    }).then((result) => {
        if (result.isConfirmed) {
            for (let i = 1; i <= 4; i++) {
                document.getElementById(`hiddenImage${i}`).value = originalFormData[`image${i}`];
                document.getElementById(`input${i}`).value = '';
                document.getElementById(`imgView${i}`).src = `/uploads/re-image/${originalFormData[`image${i}`]}`;
                
                // Destroy cropper if active
                if (croppers[i]) {
                    croppers[i].destroy();
                    croppers[i] = null;
                    document.getElementById(`cropperContainer${i}`).style.display = 'none';
                }
            }
            
            Swal.fire('Reset', 'All images have been reset to original.', 'success');
        }
    });
}

// Clear all changes
function clearAllChanges() {
    Swal.fire({
        title: 'Clear All Changes',
        text: 'Are you sure you want to discard all your changes?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, discard all!'
    }).then((result) => {
        if (result.isConfirmed) {
            // Reset form fields
            const form = document.getElementById('productForm');
            form.productName.value = originalFormData.productName;
            form.brand.value = originalFormData.brand;
            form.descriptionData.value = originalFormData.descriptionData;
            form.regularPrice.value = originalFormData.regularPrice;
            form.salesPrice.value = originalFormData.salsePrice;
            form.quantity.value = originalFormData.quantity;
            form.category.value = originalFormData.category;
            
            // Reset all images
            resetAllImages();
            
            // Clear error messages
            document.querySelectorAll('.error-message').forEach(el => {
                el.innerHTML = '';
            });
            
            Swal.fire('Cleared', 'All changes have been discarded.', 'success');
        }
    });
}

// Form validation and submission
function validateAndSubmitForm() {
    const form = document.getElementById('productForm');
    let isValid = true;
    
    // Clear previous error messages
    document.querySelectorAll('.error-message').forEach(el => {
        el.innerHTML = '';
    });
    
    // Validate product name
    if (!form.productName.value.trim()) {
        document.getElementById('productName-error').innerHTML = 'Product name is required';
        isValid = false;
    }
    
    // Validate description
    if (!form.descriptionData.value.trim()) {
        document.getElementById('description-error').innerHTML = 'Description is required';
        isValid = false;
    }
    
    // Validate regular price
    if (!form.regularPrice.value.trim()) {
        document.getElementById('regularPrice-error').innerHTML = 'Regular price is required';
        isValid = false;
    } else if (isNaN(form.regularPrice.value) || parseFloat(form.regularPrice.value) < 0) {
        document.getElementById('regularPrice-error').innerHTML = 'Please enter a valid price';
        isValid = false;
    }
    
    // Validate sales price
    if (form.salesPrice.value.trim() && (isNaN(form.salesPrice.value) || parseFloat(form.salesPrice.value) < 0)) {
        document.getElementById('salesPrice-error').innerHTML = 'Please enter a valid price';
        isValid = false;
    }
    
    // Validate quantity
    if (!form.quantity.value.trim()) {
        document.getElementById('quantity-error').innerHTML = 'Quantity is required';
        isValid = false;
    } else if (isNaN(form.quantity.value) || parseInt(form.quantity.value) < 0) {
        document.getElementById('quantity-error').innerHTML = 'Please enter a valid quantity';
        isValid = false;
    }
    
    // Check if at least one image is available
    const hasMainImage = form.hiddenImage1.value && form.hiddenImage1.value !== 'deleted' || form.input1.files.length > 0;
    if (!hasMainImage) {
        document.getElementById('image1-error').innerHTML = 'Main product image is required';
        isValid = false;
    }
    
    if (isValid) {
        // Prepare for submission
        Swal.fire({
            title: 'Update Product',
            text: 'Are you sure you want to update this product?',
            icon: 'question',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, update it!'
        }).then((result) => {
            if (result.isConfirmed) {
                form.submit();
            }
        });
    } else {
        Swal.fire('Validation Error', 'Please check the form for errors', 'error');
    }
}

// Function to crop existing image
function cropExistingImage(index) {
    const imgView = document.getElementById(`imgView${index}`);
    const src = imgView.src;
    const cropperContainer = document.getElementById(`cropperContainer${index}`);
    const cropperWrapper = document.getElementById(`cropperWrapper${index}`);
    
    // Setup for cropping
    cropperContainer.style.display = 'block';
    
    // Create image element for cropper
    const img = document.createElement('img');
    img.id = `cropperImage${index}`;
    img.src = src;
    img.style.maxWidth = '100%';
    
    // Clear previous content and add new image
    cropperWrapper.innerHTML = '';
    cropperWrapper.appendChild(img);
    
    // Initialize cropper
    if (croppers[index]) {
        croppers[index].destroy();
    }
    
    croppers[index] = new Cropper(img, {
        aspectRatio: 1,
        viewMode: 1,
        autoCropArea: 1,
        responsive: true
    });
}

// Add context menu for cropping existing images
document.addEventListener('DOMContentLoaded', function() {
    for (let i = 1; i <= 4; i++) {
        const imgView = document.getElementById(`imgView${i}`);
        
        // Add right-click event for context menu
        imgView.addEventListener('contextmenu', function(e) {
            e.preventDefault();
            
            Swal.fire({
                title: 'Image Options',
                text: 'Would you like to crop this existing image?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Yes, crop it',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    cropExistingImage(i);
                }
            });
        });
    }
});
</script>
<%- include("../../views/partials/admin/footer") %>
</body>
</html>

   